import{_ as e,c as d,o as s,aN as i}from"./chunks/framework.0ZSa6Wd7.js";const y=JSON.parse('{"title":"🔦 相对定位","description":"","frontmatter":{"id":"relative","title":"🔦 相对定位"},"headers":[],"relativePath":"dp/2.浏览器控制/元素定位/relative.md","filePath":"dp/2.浏览器控制/元素定位/relative.md"}'),n={name:"dp/2.浏览器控制/元素定位/relative.md"};function a(l,t,c,o,r,h){return s(),d("div",null,[...t[0]||(t[0]=[i(`<h1 id="🔦-相对定位" tabindex="-1">🔦 相对定位 <a class="header-anchor" href="#🔦-相对定位" aria-label="Permalink to &quot;🔦 相对定位&quot;">​</a></h1><p>相对定位的意思是以一个已获取的元素为基准，按需要使用不同方法获取指定的其它元素。</p><p>相对定位有基于 DOM 的方式和基于视觉的方式两种</p><h2 id="✅️️-基于-dom-相对定位" tabindex="-1">✅️️ 基于 DOM 相对定位 <a class="header-anchor" href="#✅️️-基于-dom-相对定位" aria-label="Permalink to &quot;✅️️ 基于 DOM 相对定位&quot;">​</a></h2><p>以下方法可以以某元素为基准，在 DOM 中按照条件获取其直接子节点、同级节点、祖先元素、文档前后节点。</p><p>这里说的是 “节点”，不是 “元素”。因为相对定位可以获取除元素外的其它节点，包括文本、注释节点。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><pre><code>如果元素在\`&lt;iframe&gt;\`中，相对定位不能超越\`&lt;iframe&gt;\`文档。
</code></pre></div><h3 id="📌-获取父级元素" tabindex="-1">📌 获取父级元素 <a class="header-anchor" href="#📌-获取父级元素" aria-label="Permalink to &quot;📌 获取父级元素&quot;">​</a></h3><p>🔸 <code>parent()</code></p><p>此方法获取当前元素某一级父元素，可指定筛选条件或层数。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>level_or_loc</code></td><td style="text-align:center;"><code>int</code><br><code>str</code><br><code>Tuple[str, str]</code></td><td style="text-align:center;"><code>1</code></td><td>第几级父元素，从<code>1</code>开始，或用定位符在祖先元素中进行筛选</td></tr><tr><td style="text-align:center;"><code>index</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>1</code></td><td>当<code>level_or_loc</code>传入定位符，使用此参数选择第几个结果，从当前元素往上级数；当<code>level_or_loc</code>传入数字时，此参数无效</td></tr><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>0</code></td><td>查找超时时间（秒），为<code>None</code>时使用页面超时设置，s 模式下无效</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>d 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>SessionElement</code></td><td>s 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 的第二层父元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.parent(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 父元素中 id 为 id1 的元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.parent(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#id1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-获取直接子节点" tabindex="-1">📌 获取直接子节点 <a class="header-anchor" href="#📌-获取直接子节点" aria-label="Permalink to &quot;📌 获取直接子节点&quot;">​</a></h3><p>🔸 <code>child()</code></p><p>此方法返回当前元素的一个直接子节点，可指定筛选条件和第几个。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>locator</code></td><td style="text-align:center;"><code>str</code><br><code>Tuple[str, str]</code><br><code>int</code></td><td style="text-align:center;"><code>&#39;&#39;</code></td><td>用于筛选节点的查询语法，为<code>int</code>类型时<code>index</code>参数无效</td></tr><tr><td style="text-align:center;"><code>index</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>1</code></td><td>查询结果中的第几个，从<code>1</code>开始，可输入负数表示倒数</td></tr><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>查找超时时间（秒），为<code>None</code>时使用页面超时设置，s 模式下无效</td></tr><tr><td style="text-align:center;"><code>ele_only</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否只查找元素，为<code>False</code>时把文本、注释节点也纳入查找范围</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>str</code></td><td>获取非元素节点时返回字符串</td></tr><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>d 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>SessionElement</code></td><td>s 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table><hr><p>🔸 <code>children()</code></p><p>此方法返回当前元素全部符合条件的直接子节点组成的列表，可用查询语法筛选。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>locator</code></td><td style="text-align:center;"><code>str</code><br><code>Tuple[str, str]</code></td><td style="text-align:center;"><code>&#39;&#39;</code></td><td>用于筛选节点的查询语法</td></tr><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>查找超时时间（秒），为<code>None</code>时使用页面超时设置，s 模式下无效</td></tr><tr><td style="text-align:center;"><code>ele_only</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否只查找元素，为<code>False</code>时把文本、注释节点也纳入查找范围</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElementsList</code></td><td>d 模式结果列表</td></tr><tr><td style="text-align:center;"><code>SessionElementsList</code></td><td>s 模式结果列表</td></tr></tbody></table><hr><h3 id="📌-获取后面的同级节点" tabindex="-1">📌 获取后面的同级节点 <a class="header-anchor" href="#📌-获取后面的同级节点" aria-label="Permalink to &quot;📌 获取后面的同级节点&quot;">​</a></h3><p>🔸 <code>next()</code></p><p>此方法返回当前元素后面的某一个同级节点，可指定筛选条件和第几个。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>locator</code></td><td style="text-align:center;"><code>str</code><br><code>Tuple[str, str]</code><br><code>int</code></td><td style="text-align:center;"><code>&#39;&#39;</code></td><td>用于筛选节点的查询语法，为<code>int</code>类型时<code>index</code>参数无效</td></tr><tr><td style="text-align:center;"><code>index</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>1</code></td><td>查询结果中的第几个，从<code>1</code>开始，可输入负数表示倒数</td></tr><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>查找超时时间（秒），为<code>None</code>时使用页面超时设置，s 模式下无效</td></tr><tr><td style="text-align:center;"><code>ele_only</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否只查找元素，为<code>False</code>时把文本、注释节点也纳入查找范围</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>str</code></td><td>获取非元素节点时返回字符串</td></tr><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>d 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>SessionElement</code></td><td>s 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 后面第一个兄弟元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.next()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 后面第 3 个兄弟元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.next(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 后面第 3 个 div 兄弟元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.next(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tag:div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 后面第一个文本节点的文本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">txt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.next(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xpath:text()&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><p>🔸 <code>nexts()</code></p><p>此方法返回当前元素后面全部符合条件的同级节点组成的列表，可用查询语法筛选。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>locator</code></td><td style="text-align:center;"><code>str</code><br><code>Tuple[str, str]</code></td><td style="text-align:center;"><code>&#39;&#39;</code></td><td>用于筛选节点的查询语法</td></tr><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>查找超时时间（秒），为<code>None</code>时使用页面超时设置，s 模式下无效</td></tr><tr><td style="text-align:center;"><code>ele_only</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否只查找元素，为<code>False</code>时把文本、注释节点也纳入查找范围</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElementsList</code></td><td>d 模式结果列表</td></tr><tr><td style="text-align:center;"><code>SessionElementsList</code></td><td>s 模式结果列表</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 后面所有兄弟元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.nexts()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 后面所有 div 兄弟元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">divs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.nexts(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tag:div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 后面的所有文本节点</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">txts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.nexts(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xpath:text()&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-获取前面的同级节点" tabindex="-1">📌 获取前面的同级节点 <a class="header-anchor" href="#📌-获取前面的同级节点" aria-label="Permalink to &quot;📌 获取前面的同级节点&quot;">​</a></h3><p>🔸 <code>prev()</code></p><p>此方法返回当前元素前面的某一个同级节点，可指定筛选条件和第几个。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>locator</code></td><td style="text-align:center;"><code>str</code><br><code>Tuple[str, str]</code><br><code>int</code></td><td style="text-align:center;"><code>&#39;&#39;</code></td><td>用于筛选节点的查询语法，为<code>int</code>类型时<code>index</code>参数无效</td></tr><tr><td style="text-align:center;"><code>index</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>1</code></td><td>查询结果中的第几个，从<code>1</code>开始，可输入负数表示倒数</td></tr><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>查找超时时间（秒），为<code>None</code>时使用页面超时设置，s 模式下无效</td></tr><tr><td style="text-align:center;"><code>ele_only</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否只查找元素，为<code>False</code>时把文本、注释节点也纳入查找范围</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>str</code></td><td>获取非元素节点时返回字符串</td></tr><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>d 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>SessionElement</code></td><td>s 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面第一个兄弟元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.prev()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面第 3 个兄弟元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.prev(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面第 3 个 div 兄弟元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.prev(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tag:div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面第一个文本节点的文本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">txt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.prev(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xpath:text()&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><p>🔸 <code>prevs()</code></p><p>此方法返回当前元素前面全部符合条件的同级节点组成的列表，可用查询语法筛选。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>locator</code></td><td style="text-align:center;"><code>str</code><br><code>Tuple[str, str]</code></td><td style="text-align:center;"><code>&#39;&#39;</code></td><td>用于筛选节点的查询语法</td></tr><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>查找超时时间（秒），为<code>None</code>时使用页面超时设置，s 模式下无效</td></tr><tr><td style="text-align:center;"><code>ele_only</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否只查找元素，为<code>False</code>时把文本、注释节点也纳入查找范围</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElementsList</code></td><td>d 模式结果列表</td></tr><tr><td style="text-align:center;"><code>SessionElementsList</code></td><td>s 模式结果列表</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面所有兄弟元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.prevs()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面所有 div 兄弟元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">divs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.prevs(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tag:div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-在后面文档中查找节点" tabindex="-1">📌 在后面文档中查找节点 <a class="header-anchor" href="#📌-在后面文档中查找节点" aria-label="Permalink to &quot;📌 在后面文档中查找节点&quot;">​</a></h3><p>🔸 <code>after()</code></p><p>此方法返回当前元素后面的某一个节点，可指定筛选条件和第几个。查找范围不限同级节点，而是整个 DOM 文档。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>locator</code></td><td style="text-align:center;"><code>str</code><br><code>Tuple[str, str]</code><br><code>int</code></td><td style="text-align:center;"><code>&#39;&#39;</code></td><td>用于筛选节点的查询语法，为<code>int</code>类型时<code>index</code>参数无效</td></tr><tr><td style="text-align:center;"><code>index</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>1</code></td><td>查询结果中的第几个，从<code>1</code>开始，可输入负数表示倒数</td></tr><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>查找超时时间（秒），为<code>None</code>时使用页面超时设置，s 模式下无效</td></tr><tr><td style="text-align:center;"><code>ele_only</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否只查找元素，为<code>False</code>时把文本、注释节点也纳入查找范围</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>str</code></td><td>获取非元素节点时返回字符串</td></tr><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>d 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>SessionElement</code></td><td>s 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 后面第 3 个元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.after(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 后面第 3 个 div 元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.after(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tag:div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 后面第一个文本节点的文本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">txt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.after(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xpath:text()&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><p>🔸 <code>afters()</code></p><p>此方法返回当前元素后面符合条件的全部节点组成的列表，可用查询语法筛选。查找范围不限同级节点，而是整个 DOM 文档。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>locator</code></td><td style="text-align:center;"><code>str</code><br><code>Tuple[str, str]</code></td><td style="text-align:center;"><code>&#39;&#39;</code></td><td>用于筛选节点的查询语法</td></tr><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>查找超时时间（秒），为<code>None</code>时使用页面超时设置，s 模式下无效</td></tr><tr><td style="text-align:center;"><code>ele_only</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否只查找元素，为<code>False</code>时把文本、注释节点也纳入查找范围</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElementsList</code></td><td>d 模式结果列表</td></tr><tr><td style="text-align:center;"><code>SessionElementsList</code></td><td>s 模式结果列表</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 后所有元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.afters()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面所有 div 元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">divs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.afters(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tag:div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-在前面文档中查找节点" tabindex="-1">📌 在前面文档中查找节点 <a class="header-anchor" href="#📌-在前面文档中查找节点" aria-label="Permalink to &quot;📌 在前面文档中查找节点&quot;">​</a></h3><p>🔸 <code>before()</code></p><p>此方法返回当前元素前面的某一个符合条件的节点，可指定筛选条件和第几个。查找范围不限同级节点，而是整个 DOM 文档。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>locator</code></td><td style="text-align:center;"><code>str</code><br><code>Tuple[str, str]</code><br><code>int</code></td><td style="text-align:center;"><code>&#39;&#39;</code></td><td>用于筛选节点的查询语法，为<code>int</code>类型时<code>index</code>参数无效</td></tr><tr><td style="text-align:center;"><code>index</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>1</code></td><td>查询结果中的第几个，从<code>1</code>开始，可输入负数表示倒数</td></tr><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>查找超时时间（秒），为<code>None</code>时使用页面超时设置，s 模式下无效</td></tr><tr><td style="text-align:center;"><code>ele_only</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否只查找元素，为<code>False</code>时把文本、注释节点也纳入查找范围</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>str</code></td><td>获取非元素节点时返回字符串</td></tr><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>d 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>SessionElement</code></td><td>s 模式下的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面第 3 个元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.before(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面第 3 个 div 元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.before(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tag:div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面第一个文本节点的文本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">txt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.before(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xpath:text()&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><p>🔸 <code>befores()</code></p><p>此方法返回当前元素前面全部符合条件的节点组成的列表，可用查询语法筛选。查找范围不限同级节点，而是整个 DOM 文档。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>locator</code></td><td style="text-align:center;"><code>str</code><br><code>Tuple[str, str]</code></td><td style="text-align:center;"><code>&#39;&#39;</code></td><td>用于筛选节点的查询语法</td></tr><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>查找超时时间（秒），为<code>None</code>时使用页面超时设置，s 模式下无效</td></tr><tr><td style="text-align:center;"><code>ele_only</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否只查找元素，为<code>False</code>时把文本、注释节点也纳入查找范围</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElementsList</code></td><td>d 模式结果列表</td></tr><tr><td style="text-align:center;"><code>SessionElementsList</code></td><td>s 模式结果列表</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面所有元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.befores()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 ele1 前面所有 div 元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">divs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.befores(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tag:div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h2 id="✅️️-基于视觉相对定位" tabindex="-1">✅️️ 基于视觉相对定位 <a class="header-anchor" href="#✅️️-基于视觉相对定位" aria-label="Permalink to &quot;✅️️ 基于视觉相对定位&quot;">​</a></h2><p>以下方法可以以某元素为基准，向不同方向或指定偏移量获取元素。</p><p>只有浏览器模式支持这类定位方式。</p><p>只能获取可见的元素（不论是否在视口内），不能获取被遮挡的。</p><h3 id="📌-east" tabindex="-1">📌 <code>east()</code> <a class="header-anchor" href="#📌-east" aria-label="Permalink to &quot;📌 \`east()\`&quot;">​</a></h3><p>此方法用于获取一个在当前元素右边的元素。</p><p><code>loc_or_pixel</code>参数可用定位符指定筛选条件，定位符只支持<code>str</code>格式，且不支持 xpath 和 css 方式。</p><p>用<code>index</code>参数可指定获取第几个结果。如果<code>loc_or_pixel</code>为<code>None</code>，获取第若干个元素。</p><p><code>loc_or_pixel</code>为<code>int</code>格式时，直接获取元素右边这个距离的元素，此时<code>index</code>参数无效。距离从右边框开始计算。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>loc_or_pixel</code></td><td style="text-align:center;"><code>str</code><br><code>int</code></td><td style="text-align:center;"><code>None</code></td><td>定位符或距离（像素）</td></tr><tr><td style="text-align:center;"><code>index</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>1</code></td><td>第几个，从1开始，<code>loc_or_pixel</code>为<code>int</code>格式时无效</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>找到的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table><hr><h3 id="📌-west" tabindex="-1">📌 <code>west()</code> <a class="header-anchor" href="#📌-west" aria-label="Permalink to &quot;📌 \`west()\`&quot;">​</a></h3><p>此方法用于获取一个在当前元素左边的元素。</p><p><code>loc_or_pixel</code>参数可用定位符指定筛选条件，定位符只支持<code>str</code>格式，且不支持 xpath 和 css 方式。</p><p>用<code>index</code>参数可指定获取第几个结果。如果<code>loc_or_pixel</code>为<code>None</code>，获取第若干个元素。</p><p><code>loc_or_pixel</code>为<code>int</code>格式时，直接获取元素左边这个距离的元素，此时<code>index</code>参数无效。距离从左边框开始计算。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>loc_or_pixel</code></td><td style="text-align:center;"><code>str</code><br><code>int</code></td><td style="text-align:center;"><code>None</code></td><td>定位符或距离（像素）</td></tr><tr><td style="text-align:center;"><code>index</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>1</code></td><td>第几个，从1开始，<code>loc_or_pixel</code>为<code>int</code>格式时无效</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>找到的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table><hr><h3 id="📌-south" tabindex="-1">📌 <code>south()</code> <a class="header-anchor" href="#📌-south" aria-label="Permalink to &quot;📌 \`south()\`&quot;">​</a></h3><p>此方法用于获取一个在当前元素下边的元素。</p><p><code>loc_or_pixel</code>参数可用定位符指定筛选条件，定位符只支持<code>str</code>格式，且不支持 xpath 和 css 方式。</p><p>用<code>index</code>参数可指定获取第几个结果。如果<code>loc_or_pixel</code>为<code>None</code>，获取第若干个元素。</p><p><code>loc_or_pixel</code>为<code>int</code>格式时，直接获取元素下边这个距离的元素，此时<code>index</code>参数无效。距离从下边框开始计算。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>loc_or_pixel</code></td><td style="text-align:center;"><code>str</code><br><code>int</code></td><td style="text-align:center;"><code>None</code></td><td>定位符或距离（像素）</td></tr><tr><td style="text-align:center;"><code>index</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>1</code></td><td>第几个，从1开始，<code>loc_or_pixel</code>为<code>int</code>格式时无效</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>找到的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table><hr><h3 id="📌-north" tabindex="-1">📌 <code>north()</code> <a class="header-anchor" href="#📌-north" aria-label="Permalink to &quot;📌 \`north()\`&quot;">​</a></h3><p>此方法用于获取一个在当前元素上边的元素。</p><p><code>loc_or_pixel</code>参数可用定位符指定筛选条件，定位符只支持<code>str</code>格式，且不支持 xpath 和 css 方式。</p><p>用<code>index</code>参数可指定获取第几个结果。如果<code>loc_or_pixel</code>为<code>None</code>，获取第若干个元素。</p><p><code>loc_or_pixel</code>为<code>int</code>格式时，直接获取元素上边这个距离的元素，此时<code>index</code>参数无效。距离从上边框开始计算。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>loc_or_pixel</code></td><td style="text-align:center;"><code>str</code><br><code>int</code></td><td style="text-align:center;"><code>None</code></td><td>定位符或距离（像素）</td></tr><tr><td style="text-align:center;"><code>index</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>1</code></td><td>第几个，从1开始，<code>loc_or_pixel</code>为<code>int</code>格式时无效</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>找到的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table><hr><h3 id="📌-offset" tabindex="-1">📌 <code>offset()</code> <a class="header-anchor" href="#📌-offset" aria-label="Permalink to &quot;📌 \`offset()\`&quot;">​</a></h3><p>此方法用于获取相对于元素左上角指定偏移量的一个元素。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>offset_x</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;">必填</td><td>横坐标偏移量（像素），向右为正</td></tr><tr><td style="text-align:center;"><code>offset_y</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;">必填</td><td>纵坐标偏移量（像素），向下为正</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>找到的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table><hr><h3 id="📌-over" tabindex="-1">📌 <code>over()</code> <a class="header-anchor" href="#📌-over" aria-label="Permalink to &quot;📌 \`over()\`&quot;">​</a></h3><p>此方法用于获取覆盖在本元素上最上层的元素。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>等待元素出现的超时时间（秒），为<code>None</code>使用页面<code>timeout</code>设置值</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>找到的元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>未获取到结果时</td></tr></tbody></table>`,131)])])}const k=e(n,[["render",a]]);export{y as __pageData,k as default};
