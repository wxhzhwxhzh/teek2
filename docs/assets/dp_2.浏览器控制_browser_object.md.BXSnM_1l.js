import{_ as e,c as d,o as a,aM as o}from"./chunks/framework.CWgDeAH8.js";const b=JSON.parse('{"title":"🛰️ 浏览器对象","description":"","frontmatter":{"id":"browser_object","title":"🛰️ 浏览器对象"},"headers":[],"relativePath":"dp/2.浏览器控制/browser_object.md","filePath":"dp/2.浏览器控制/browser_object.md"}'),c={name:"dp/2.浏览器控制/browser_object.md"};function n(l,t,s,i,r,h){return a(),d("div",null,[...t[0]||(t[0]=[o('<h1 id="🛰️-浏览器对象" tabindex="-1">🛰️ 浏览器对象 <a class="header-anchor" href="#🛰️-浏览器对象" aria-label="Permalink to &quot;🛰️ 浏览器对象&quot;">​</a></h1><p>我们已经了解如何创建浏览器对象，本节介绍浏览器对象的功能。</p><div class="note custom-block"><p class="title note-title custom-block-title">说明</p><pre><code>文中的 “Tab 对象” 是`ChromiumTab`和`MixTab`的统称。\n</code></pre></div><h2 id="✅️️-获取标签页对象或信息" tabindex="-1">✅️️ 获取标签页对象或信息 <a class="header-anchor" href="#✅️️-获取标签页对象或信息" aria-label="Permalink to &quot;✅️️ 获取标签页对象或信息&quot;">​</a></h2><h3 id="📌-get-tab" tabindex="-1">📌 <code>get_tab()</code> <a class="header-anchor" href="#📌-get-tab" aria-label="Permalink to &quot;📌 `get_tab()`&quot;">​</a></h3><p>此方法用于获取一个标签页对象或它的 id。</p><p><code>id_or_num</code>不为<code>None</code>时，获取<code>id_or_num</code>指定的标签页。后面几个参数无效。</p><p><code>id_or_num</code>为<code>None</code>时，根据后面几个参数指定的条件查找标签页（与关系）。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>id_or_num</code></td><td style="text-align:center;"><code>str</code><br><code>int</code></td><td style="text-align:center;"><code>None</code></td><td>要获取的标签页 id 或序号，序号从<code>1</code>开始，可传入负数获取倒数第几个，不是视觉排列顺序，而是激活顺序</td></tr><tr><td style="text-align:center;"><code>title</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>要匹配 title 的文本，模糊匹配，为<code>None</code>则匹配所有</td></tr><tr><td style="text-align:center;"><code>url</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>要匹配 url 的文本，模糊匹配，为<code>None</code>则匹配所有</td></tr><tr><td style="text-align:center;"><code>tab_type</code></td><td style="text-align:center;"><code>str</code><br><code>list</code><br><code>tuple</code></td><td style="text-align:center;"><code>&#39;page&#39;</code></td><td>标签页类型，可用列表输入多个，如<code>&#39;page&#39;</code>、<code>&#39;iframe&#39;</code>等，为<code>None</code>则匹配所有</td></tr><tr><td style="text-align:center;"><code>as_id</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否返回标签页 id 而不是标签页对象</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>MixTab</code></td><td><code>as_id</code>为<code>False</code>时返回获取到的标签页对象</td></tr><tr><td style="text-align:center;"><code>str</code></td><td><code>as_id</code>为<code>True</code>时返回获取到的标签页的 id</td></tr></tbody></table><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">browser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.get_tab()</span></span></code></pre></div><hr><h3 id="📌-get-tabs" tabindex="-1">📌 <code>get_tabs()</code> <a class="header-anchor" href="#📌-get-tabs" aria-label="Permalink to &quot;📌 `get_tabs()`&quot;">​</a></h3><p>此方法用于获取多个符合条件的<code>MixTab</code>对象或它们的 id组成的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>title</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>要匹配 title 的文本，模糊匹配，为<code>None</code>则匹配所有</td></tr><tr><td style="text-align:center;"><code>url</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>要匹配 url 的文本，模糊匹配，为<code>None</code>则匹配所有</td></tr><tr><td style="text-align:center;"><code>tab_type</code></td><td style="text-align:center;"><code>str</code><br><code>list</code><br><code>tuple</code></td><td style="text-align:center;"><code>&#39;page&#39;</code></td><td>标签页类型，可用列表输入多个，如<code>&#39;page&#39;</code>、<code>&#39;iframe&#39;</code>等，为<code>None</code>则匹配所有</td></tr><tr><td style="text-align:center;"><code>as_id</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否返回标签页 id 而不是标签页对象</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>List[MixTab]</code></td><td><code>as_id</code>为<code>False</code>时返回获取到的标签页对象组成的列表</td></tr><tr><td style="text-align:center;"><code>List[str]</code></td><td><code>as_id</code>为<code>True</code>时返回获取到的标签页的 id 组成的列表</td></tr></tbody></table><hr><h3 id="📌-latest-tab" tabindex="-1">📌 <code>latest_tab</code> <a class="header-anchor" href="#📌-latest-tab" aria-label="Permalink to &quot;📌 `latest_tab`&quot;">​</a></h3><p>此属性返回最新的标签页对象或 id。</p><ul><li>控制本地浏览器时，返回最后激活的标签页</li><li>控制远程浏览器时，返回最后创建的标签页</li></ul><p>如果关闭单例模式，即当<code>Settings.singleton_tab_obj</code>为<code>False</code>时，返回标签页的 id。</p><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>MixTab</code></td><td>单例模式时返回标签页对象</td></tr><tr><td style="text-align:center;"><code>str</code></td><td>非单例模式时返回标签页 id</td></tr></tbody></table><hr><h3 id="📌-tabs-count" tabindex="-1">📌 <code>tabs_count</code> <a class="header-anchor" href="#📌-tabs-count" aria-label="Permalink to &quot;📌 `tabs_count`&quot;">​</a></h3><p>此属性返回标签页数量，只统计普通标签页（即<code>&#39;page&#39;</code>、<code>&#39;webview&#39;</code>类型）。</p><p><strong>类型：</strong><code>int</code></p><hr><h3 id="📌-tab-ids" tabindex="-1">📌 <code>tab_ids</code> <a class="header-anchor" href="#📌-tab-ids" aria-label="Permalink to &quot;📌 `tab_ids`&quot;">​</a></h3><p>此属性返回所有标签页 id 组成的列表，只统计普通标签页（即<code>&#39;page&#39;</code>、<code>&#39;webview&#39;</code>类型）。</p><p><strong>类型：</strong><code>List[str]</code></p><hr><h2 id="✅️️-标签页操作" tabindex="-1">✅️️ 标签页操作 <a class="header-anchor" href="#✅️️-标签页操作" aria-label="Permalink to &quot;✅️️ 标签页操作&quot;">​</a></h2><h3 id="📌-new-tab" tabindex="-1">📌 <code>new_tab()</code> <a class="header-anchor" href="#📌-new-tab" aria-label="Permalink to &quot;📌 `new_tab()`&quot;">​</a></h3><p>此方法用于新建标签页，并返回标签页对象。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>url</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>新标签页跳转到的网址，为<code>None</code>时新建空标签页</td></tr><tr><td style="text-align:center;"><code>new_window</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否在新窗口打开标签页，隐身模式下无效</td></tr><tr><td style="text-align:center;"><code>background</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否不激活新标签页，隐身模式和访客模式及<code>new_window</code>为<code>True</code>时无效</td></tr><tr><td style="text-align:center;"><code>new_context</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否创建独立环境，隐身模式和访客模式下无效</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>MixTab</code></td><td>标签页对象</td></tr></tbody></table><hr><h3 id="📌-activate-tab" tabindex="-1">📌 <code>activate_tab()</code> <a class="header-anchor" href="#📌-activate-tab" aria-label="Permalink to &quot;📌 `activate_tab()`&quot;">​</a></h3><p>此方法用于使一个标签页显示到前端。可传入 Tab 对象、标签页 id、标签页序号。</p><p>注意标签页序号不是视觉顺序，而是激活顺序。</p><div class="tip custom-block"><p class="custom-block-title">说明</p><pre><code>标签页没有焦点的概念，多个标签页可以并行操作，这个方法不会对所谓焦点产生什么影响。\n</code></pre></div><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>id_ind_tab</code></td><td style="text-align:center;"><code>str</code><br><code>int</code><br><code>ChromiumTab</code><br><code>MixTab</code></td><td style="text-align:center;">必填</td><td>标签页 id（<code>str</code>）、Tab 对象或标签页序号（<code>int</code>），序号从<code>1</code>开始</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-close-tabs" tabindex="-1">📌 <code>close_tabs()</code> <a class="header-anchor" href="#📌-close-tabs" aria-label="Permalink to &quot;📌 `close_tabs()`&quot;">​</a></h3><p>此方法用于关闭标签页。可指定多个，可关闭指定标签页以外的。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>tabs_or_ids</code></td><td style="text-align:center;"><code>str</code><br><code>ChromiumTab</code><br><code>MixTab</code><br><code>List|Tuple[ChromiumTab|MixTab|str]</code></td><td style="text-align:center;">必填</td><td>指定的标签页对象或 id，可用列表或元组传入多个</td></tr><tr><td style="text-align:center;"><code>others</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否关闭指定标签页之外的</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-单例模式说明" tabindex="-1">📌 单例模式说明 <a class="header-anchor" href="#📌-单例模式说明" aria-label="Permalink to &quot;📌 单例模式说明&quot;">​</a></h3><p>默认设置下，一个标签页只有一个 Tab 对象。</p><p>对同一个标签页反复使用<code>get_tab()</code>获取到的是同一个对象。</p><p>如上文所述，<code>latest_tab</code>获取的也是曾经生成过的 Tab 对象。</p><p>如果需要多个 Tab 对象共同管理一个标签页，可关闭单例模式：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.common </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Settings</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Settings.set_singleton_tab_obj(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>关闭后，每次<code>get_tab()</code>都会创建新的 Tab 对象，<code>latest_tab</code>改成返回 Tab 对象的 id。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.common </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Settings</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Settings.set_singleton_tab_obj(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">browser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.get_tab()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.get_tab()</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tab1.title, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tab1))</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tab2.title, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tab2))</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">新标签页</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2500121968848</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">新标签页</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2500125672272</span></span></code></pre></div><hr><h2 id="✅️️-浏览器运行参数" tabindex="-1">✅️️ 浏览器运行参数 <a class="header-anchor" href="#✅️️-浏览器运行参数" aria-label="Permalink to &quot;✅️️ 浏览器运行参数&quot;">​</a></h2><p>浏览器运行设置是一些总体的运行参数。</p><p>新标签页对象会继承浏览器的运行设置，但标签页对象后再修改浏览器设置，已生成的设置也不会改变。</p><p>设置优先级：Tab 对象设置 &gt; <code>Chromium</code>对象设置 &gt; <code>Settings</code>设置</p><h3 id="📌-user-data-path" tabindex="-1">📌 <code>user_data_path</code> <a class="header-anchor" href="#📌-user-data-path" aria-label="Permalink to &quot;📌 `user_data_path`&quot;">​</a></h3><p>此参数返回浏览器返回用户文件夹路径。</p><p><strong>类型：</strong><code>str</code></p><hr><h3 id="📌-download-path" tabindex="-1">📌 <code>download_path</code> <a class="header-anchor" href="#📌-download-path" aria-label="Permalink to &quot;📌 `download_path`&quot;">​</a></h3><p>此参数返回浏览器返回默认下载路径。</p><p><strong>类型：</strong><code>str</code></p><hr><h3 id="📌-几种超时参数" tabindex="-1">📌 几种超时参数 <a class="header-anchor" href="#📌-几种超时参数" aria-label="Permalink to &quot;📌 几种超时参数&quot;">​</a></h3><p>此参数返回所有超时设置，单位为秒，有<code>base</code>、<code>page_load</code>、<code>script</code>三种。</p><ul><li><code>timeouts.base</code>：各种等待的基础超时设置</li><li><code>timeouts.page_load</code>：页面文档加载的超时设置</li><li><code>timeouts.script</code>：JavaScript 运行超时设置</li></ul><p><strong>类型：</strong><code>float</code></p><hr><h3 id="📌-timeout" tabindex="-1">📌 <code>timeout</code> <a class="header-anchor" href="#📌-timeout" aria-label="Permalink to &quot;📌 `timeout`&quot;">​</a></h3><p>此参数返回基础超时设置，单位为秒，即<code>timeouts.base</code>。</p><p><strong>类型：</strong><code>float</code></p><hr><h3 id="📌-load-mode" tabindex="-1">📌 <code>load_mode</code> <a class="header-anchor" href="#📌-load-mode" aria-label="Permalink to &quot;📌 `load_mode`&quot;">​</a></h3><p>此参数返回页面加载模式，包括<code>&#39;none&#39;</code>、<code>&#39;normal&#39;</code>、<code>&#39;eager&#39;</code>三种。</p><p><strong>类型：</strong><code>str</code></p><hr><div class="wwads-cn wwads-horizontal" data-id="317"></div><br><h2 id="✅️️-浏览器运行设置" tabindex="-1">✅️️ 浏览器运行设置 <a class="header-anchor" href="#✅️️-浏览器运行设置" aria-label="Permalink to &quot;✅️️ 浏览器运行设置&quot;">​</a></h2><h3 id="📌-set-timeouts" tabindex="-1">📌 <code>set.timeouts()</code> <a class="header-anchor" href="#📌-set-timeouts" aria-label="Permalink to &quot;📌 `set.timeouts()`&quot;">​</a></h3><p>此方法用于设置运行时的各种超时时间，单位为秒。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>base</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>各种等待的默认超时时间，为<code>None</code>则不修改</td></tr><tr><td style="text-align:center;"><code>page_load</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>页面文档加载超时时间，为<code>None</code>则不修改</td></tr><tr><td style="text-align:center;"><code>script</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>脚本运行超时时间，为<code>None</code>则不修改</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-加载模式设置" tabindex="-1">📌 加载模式设置 <a class="header-anchor" href="#📌-加载模式设置" aria-label="Permalink to &quot;📌 加载模式设置&quot;">​</a></h3><p>此方法用于设置页面加载模式。具体使用方法详见访问网页章节。</p><ul><li><code>set.load_mode.normal()</code>：等待所有资源加载完毕的模式</li><li><code>set.load_mode.eager()</code>：等待文档加载完即停止加载的模式</li><li><code>set.load_mode.none()</code>：不会主动停止加载的模式</li></ul><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-set-retry-times" tabindex="-1">📌 <code>set.retry_times()</code> <a class="header-anchor" href="#📌-set-retry-times" aria-label="Permalink to &quot;📌 `set.retry_times()`&quot;">​</a></h3><p>此方法用于设置页面连接失败重连次数。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>times</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;">必填</td><td>重连次数</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-set-retry-interval" tabindex="-1">📌 <code>set.retry_interval()</code> <a class="header-anchor" href="#📌-set-retry-interval" aria-label="Permalink to &quot;📌 `set.retry_interval()`&quot;">​</a></h3><p>此方法用于设置连接失败重连间隔（秒）。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>interval</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;">必填</td><td>重连间隔</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-set-cookies" tabindex="-1">📌 <code>set.cookies()</code> <a class="header-anchor" href="#📌-set-cookies" aria-label="Permalink to &quot;📌 `set.cookies()`&quot;">​</a></h3><p>此方法用于设置一个或多个 cookie。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><pre><code>用这个方法设置 cookies 记得带上`domain`属性。\n</code></pre></div><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>cookies</code></td><td style="text-align:center;"><code>CookieJar</code><br><code>Cookie</code><br><code>list</code><br><code>tuple</code><br><code>str</code><br><code>dict</code></td><td style="text-align:center;">必填</td><td>支持多种格式的 cookies 信息，一个或多个都可以</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-set-cookies-clear" tabindex="-1">📌 <code>set.cookies.clear()</code> <a class="header-anchor" href="#📌-set-cookies-clear" aria-label="Permalink to &quot;📌 `set.cookies.clear()`&quot;">​</a></h3><p>此方法用于清除浏览器所有 cookies。</p><p><strong>参数：</strong> 无</p><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-set-auto-handle-alert" tabindex="-1">📌 <code>set.auto_handle_alert()</code> <a class="header-anchor" href="#📌-set-auto-handle-alert" aria-label="Permalink to &quot;📌 `set.auto_handle_alert()`&quot;">​</a></h3><p>此方法用于设置是否启用自动处理 alert 弹窗。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>bool</code>表示开或关，传入<code>None</code>表示使用<code>Settings</code>设置</td></tr><tr><td style="text-align:center;"><code>accept</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>处理 alert 的方式，确定还是取消</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-set-download-path" tabindex="-1">📌 <code>set.download_path()</code> <a class="header-anchor" href="#📌-set-download-path" aria-label="Permalink to &quot;📌 `set.download_path()`&quot;">​</a></h3><p>此方法用于设置下载文件默认保存路径。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>path</code></td><td style="text-align:center;"><code>Path</code><br><code>str</code><br><code>None</code></td><td style="text-align:center;">必填</td><td>文件夹路径，传入<code>None</code>表示当前文件夹</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-set-download-file-name" tabindex="-1">📌 <code>set.download_file_name()</code> <a class="header-anchor" href="#📌-set-download-file-name" aria-label="Permalink to &quot;📌 `set.download_file_name()`&quot;">​</a></h3><p>此方法用于设置下一个被下载文件的名称。</p><p>有些下载是从临时闪现的标签页触发的，这种需要由浏览器对象去捕捉和设置下载信息。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>文件名，可不含后缀，会自动使用远程文件后缀，为<code>None</code>使用远程文件名</td></tr><tr><td style="text-align:center;"><code>suffix</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>后缀名，显式设置后缀名，不使用远程文件后缀</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-set-when-download-file-exists" tabindex="-1">📌 <code>set.when_download_file_exists()</code> <a class="header-anchor" href="#📌-set-when-download-file-exists" aria-label="Permalink to &quot;📌 `set.when_download_file_exists()`&quot;">​</a></h3><p>此方法用于设置当存在同名文件时的处理方式。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>mode</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>可在<code>&#39;rename&#39;</code>、<code>&#39;overwrite&#39;</code>、<code>&#39;skip&#39;</code>、<code>&#39;r&#39;</code>、<code>&#39;o&#39;</code>、<code>&#39;s&#39;</code>中选择</td></tr></tbody></table><ul><li><code>&#39;rename&#39;</code>或<code>&#39;r&#39;</code>：自动重命名，在文件名后加序号，如<code>&#39;_1&#39;</code></li><li><code>&#39;overwrit&#39;</code>或<code>&#39;o&#39;</code>：覆盖已有文件</li><li><code>&#39;skip&#39;</code>或<code>&#39;s&#39;</code>：跳过，不下载</li></ul><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-set-noneelement-value" tabindex="-1">📌 <code>set.NoneElement_value()</code> <a class="header-anchor" href="#📌-set-noneelement-value" aria-label="Permalink to &quot;📌 `set.NoneElement_value()`&quot;">​</a></h3><p>此方法用于设置查找元素失败时返回的空元素是否返回设定值。详见元素查找行为章节。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>value</code></td><td style="text-align:center;"><code>Any</code></td><td style="text-align:center;"><code>None</code></td><td>设置的设定值</td></tr><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否启用</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><hr><h2 id="✅️️-浏览器信息" tabindex="-1">✅️️ 浏览器信息 <a class="header-anchor" href="#✅️️-浏览器信息" aria-label="Permalink to &quot;✅️️ 浏览器信息&quot;">​</a></h2><h3 id="📌-cookies" tabindex="-1">📌 <code>cookies()</code> <a class="header-anchor" href="#📌-cookies" aria-label="Permalink to &quot;📌 `cookies()`&quot;">​</a></h3><p>此方法以列表形式返回浏览器所有域名的 cookies，cookie 是<code>dict</code>格式。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>all_info</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否返回所有内容，<code>False</code>则只返回<code>&#39;name&#39;</code>、<code>&#39;value&#39;</code>、<code>&#39;domain&#39;</code>三个属性</td></tr></tbody></table><p><strong>返回：</strong><code>CookiesList</code></p><p>除列表格式，还能以其它格式返回：</p><ul><li><code>cookies().as_str</code>：以<code>str</code>格式返回，只包含<code>name</code>和<code>value</code>字段，<code>&#39;name1=value1; name2=value2&#39;</code>格式</li><li><code>cookies().as_dict</code>：以<code>dict</code>格式返回，只包含<code>name</code>和<code>value</code>字段，<code>{&#39;name1&#39;: &#39;value1&#39;, &#39;name2&#39;: &#39;value1&#39;}</code>格式</li><li><code>cookies().as_json</code>：把列表转换为 json 返回</li></ul><hr><h3 id="📌-process-id" tabindex="-1">📌 <code>process_id</code> <a class="header-anchor" href="#📌-process-id" aria-label="Permalink to &quot;📌 `process_id`&quot;">​</a></h3><p>此属性返回浏览器进程 pid。</p><p><strong>类型：</strong><code>int</code></p><hr><h3 id="📌-states-is-alive" tabindex="-1">📌 <code>states.is_alive</code> <a class="header-anchor" href="#📌-states-is-alive" aria-label="Permalink to &quot;📌 `states.is_alive`&quot;">​</a></h3><p>此属性返回浏览器是否仍可用。</p><p><strong>类型：</strong><code>bool</code></p><hr><h3 id="📌-states-is-existed" tabindex="-1">📌 <code>states.is_existed</code> <a class="header-anchor" href="#📌-states-is-existed" aria-label="Permalink to &quot;📌 `states.is_existed`&quot;">​</a></h3><p>此属性返回浏览器是否接管的，而非本程序创建的。</p><p><strong>类型：</strong><code>bool</code></p><hr><h3 id="📌-states-is-headless" tabindex="-1">📌 <code>states.is_headless</code> <a class="header-anchor" href="#📌-states-is-headless" aria-label="Permalink to &quot;📌 `states.is_headless`&quot;">​</a></h3><p>此属性返回浏览器是否无头模式。</p><p><strong>类型：</strong><code>bool</code></p><hr><h3 id="📌-states-is-incognito" tabindex="-1">📌 <code>states.is_incognito</code> <a class="header-anchor" href="#📌-states-is-incognito" aria-label="Permalink to &quot;📌 `states.is_incognito`&quot;">​</a></h3><p>此属性返回浏览器是否无痕模式。</p><p><strong>类型：</strong><code>bool</code></p><hr><h2 id="✅️️-其它浏览器行为" tabindex="-1">✅️️ 其它浏览器行为 <a class="header-anchor" href="#✅️️-其它浏览器行为" aria-label="Permalink to &quot;✅️️ 其它浏览器行为&quot;">​</a></h2><h3 id="📌-wait" tabindex="-1">📌 <code>wait()</code> <a class="header-anchor" href="#📌-wait" aria-label="Permalink to &quot;📌 `wait()`&quot;">​</a></h3><p>此方法用于等待若干秒。<br><code>scope</code>为<code>None</code>时，效果与<code>time.sleep()</code>没有区别，等待指定秒数。<br><code>scope</code>不为<code>None</code>时，获取两个参数之间的一个随机值，等待这个数值的秒数。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>second</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;">必填</td><td>要等待的秒数，<code>scope</code>不为<code>None</code>时表示随机数范围起始值</td></tr><tr><td style="text-align:center;"><code>scope</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>随机数范围结束值</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Chromium</code></td><td>浏览器对象自身</td></tr></tbody></table><hr><h3 id="📌-wait-new-tab" tabindex="-1">📌 <code>wait.new_tab()</code> <a class="header-anchor" href="#📌-wait-new-tab" aria-label="Permalink to &quot;📌 `wait.new_tab()`&quot;">​</a></h3><p>此方法用于等待新标签页出现。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>超时时间（秒），为<code>None</code>则使用对象<code>timeout</code>属性</td></tr><tr><td style="text-align:center;"><code>curr_tab</code></td><td style="text-align:center;"><code>str</code><br><code>ChromiumTab</code><br><code>MixTab</code></td><td style="text-align:center;"><code>None</code></td><td>指定当前最新的 Tab 对象或标签页 id，用于判断新标签页出现，为<code>None</code>自动获取</td></tr><tr><td style="text-align:center;"><code>raise_err</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>None</code></td><td>等待失败时是否报错，为<code>None</code>时根据<code>Settings</code>设置</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>str</code></td><td>等待成功返回新标签页 id</td></tr><tr><td style="text-align:center;"><code>False</code></td><td>等待失败返回<code>False</code></td></tr></tbody></table><hr><h3 id="📌-wait-download-begin" tabindex="-1">📌 <code>wait.download_begin()</code> <a class="header-anchor" href="#📌-wait-download-begin" aria-label="Permalink to &quot;📌 `wait.download_begin()`&quot;">​</a></h3><p>此方法用于等待浏览器下载开始。</p><p>有些下载是从临时闪现的标签页触发的，这种需要由浏览器对象去捕捉。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>超时时间（秒），<code>None</code>使用页面对象超时时间</td></tr><tr><td style="text-align:center;"><code>cancel_it</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否取消该任务</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>DownloadMission</code></td><td>等待成功返回下载任务对象</td></tr><tr><td style="text-align:center;"><code>False</code></td><td>等待失败返回<code>False</code></td></tr></tbody></table><hr><h3 id="📌-wait-downloads-done" tabindex="-1">📌 <code>wait.downloads_done()</code> <a class="header-anchor" href="#📌-wait-downloads-done" aria-label="Permalink to &quot;📌 `wait.downloads_done()`&quot;">​</a></h3><p>此方法用于等待所有浏览器下载任务结束。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>超时时间（秒），为<code>None</code>时无限等待</td></tr><tr><td style="text-align:center;"><code>cancel_if_timeout</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>超时时是否取消剩余任务</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>bool</code></td><td>是否等待成功</td></tr></tbody></table><hr><h3 id="📌-clear-cache" tabindex="-1">📌 <code>clear_cache()</code> <a class="header-anchor" href="#📌-clear-cache" aria-label="Permalink to &quot;📌 `clear_cache()`&quot;">​</a></h3><p>此方法用于清除缓存。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>cache</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否清除缓存</td></tr><tr><td style="text-align:center;"><code>cookies</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否清除 cookies</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-reconnect" tabindex="-1">📌 <code>reconnect()</code> <a class="header-anchor" href="#📌-reconnect" aria-label="Permalink to &quot;📌 `reconnect()`&quot;">​</a></h3><p>此方法用于关闭与浏览器连接，并重新创建连接。</p><p><strong>参数：</strong> 无</p><p><strong>返回：</strong><code>None</code></p><hr><h3 id="📌-quit" tabindex="-1">📌 <code>quit()</code> <a class="header-anchor" href="#📌-quit" aria-label="Permalink to &quot;📌 `quit()`&quot;">​</a></h3><p>此方法用于关闭浏览器。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>timeout</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>5</code></td><td>等待浏览器关闭超时时间（秒）</td></tr><tr><td style="text-align:center;"><code>force</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否立刻强制终止进程</td></tr><tr><td style="text-align:center;"><code>del_data</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否删除用户文件夹</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p>',210)])])}const g=e(c,[["render",n]]);export{b as __pageData,g as default};
