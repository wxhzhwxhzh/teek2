import{_ as e,c as a,o as s,aN as i}from"./chunks/framework.0ZSa6Wd7.js";const g=JSON.parse('{"title":"🛰️ 浏览器启动设置","description":"","frontmatter":{"id":"browser_options","title":"🛰️ 浏览器启动设置"},"headers":[],"relativePath":"dp/2.浏览器控制/3.browser_options.md","filePath":"dp/2.浏览器控制/3.browser_options.md"}'),d={name:"dp/2.浏览器控制/3.browser_options.md"};function n(o,t,h,l,r,c){return s(),a("div",null,[...t[0]||(t[0]=[i('<h1 id="🛰️-浏览器启动设置" tabindex="-1">🛰️ 浏览器启动设置 <a class="header-anchor" href="#🛰️-浏览器启动设置" aria-label="Permalink to &quot;🛰️ 浏览器启动设置&quot;">​</a></h1><p>浏览器的启动配置非常繁杂，本库使用<code>ChromiumOptions</code>类管理启动配置，并且内置了常用配置的设置接口。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><pre><code>该对象只能用于浏览器的启动，浏览器启动后，再修改该配置没有任何效果。接管已打开的浏览器时，启动配置也是无效的。\n</code></pre></div><h2 id="✅️️-创建对象" tabindex="-1">✅️️ 创建对象 <a class="header-anchor" href="#✅️️-创建对象" aria-label="Permalink to &quot;✅️️ 创建对象&quot;">​</a></h2><h3 id="📌-导入" tabindex="-1">📌 导入 <a class="header-anchor" href="#📌-导入" aria-label="Permalink to &quot;📌 导入&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumOptions</span></span></code></pre></div><hr><h3 id="📌-初始化参数" tabindex="-1">📌 初始化参数 <a class="header-anchor" href="#📌-初始化参数" aria-label="Permalink to &quot;📌 初始化参数&quot;">​</a></h3><p><code>ChromiumOptions</code>对象用于管理浏览器初始化配置。可从配置文件中读取配置来进行初始化。</p><table tabindex="0"><thead><tr><th style="text-align:center;">初始化参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>read_file</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否从 ini 文件中读取配置信息，为<code>False</code>则用默认配置创建</td></tr><tr><td style="text-align:center;"><code>ini_path</code></td><td style="text-align:center;"><code>Path</code><br><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>指定 ini 文件路径，为<code>None</code>则读取内置 ini 文件</td></tr></tbody></table><p>创建配置对象：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumOptions</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumOptions()</span></span></code></pre></div><p>默认情况下，<code>ChromiumOptions</code>对象会从 ini 文件中读取配置信息，当指定<code>read_file</code>参数为<code>False</code>时，则以默认配置创建。</p><div class="info custom-block"><p class="custom-block-title">提醒</p><pre><code>对象创建时已带有默认设置，如要清除，可调用`clear_arguments()`、`clear_prefs()`等方法。\n</code></pre></div><hr><h2 id="✅️️-使用方法" tabindex="-1">✅️️ 使用方法 <a class="header-anchor" href="#✅️️-使用方法" aria-label="Permalink to &quot;✅️️ 使用方法&quot;">​</a></h2><p>创建配置对象后，可调整配置内容，然后在页面对象创建时以参数形式把配置对象传递进去，页面对象会根据配置对象的内容对浏览器进行初始化。</p><p>配置对象支持链式操作。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium, ChromiumOptions</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建配置对象（默认从 ini 文件中读取配置）</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumOptions()</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置不加载图片、静音</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.no_imgs(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).mute(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 以该配置创建页面对象</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addr_or_opts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co)</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Chromium, ChromiumOptions</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumOptions()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.incognito()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 匿名模式</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.headless()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 无头模式</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--no-sandbox&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 无沙盒模式</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium(co)</span></span></code></pre></div><hr><h2 id="✅️️-命令行参数设置" tabindex="-1">✅️️ 命令行参数设置 <a class="header-anchor" href="#✅️️-命令行参数设置" aria-label="Permalink to &quot;✅️️ 命令行参数设置&quot;">​</a></h2><p>Chromium 内核浏览器有一系列的启动配置，以<code>--</code>开头，可在浏览器创建时传入，控制浏览器行为和初始状态。</p><p>启动参数非常多，详见：<a href="https://peter.sh/experiments/chromium-command-line-switches/" target="_blank" rel="noreferrer">List of Chromium Command Line Switches</a></p><h3 id="📌-set-argument" tabindex="-1">📌 <code>set_argument()</code> <a class="header-anchor" href="#📌-set-argument" aria-label="Permalink to &quot;📌 `set_argument()`&quot;">​</a></h3><p>此方法用于设置启动参数。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>arg</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>启动参数名称</td></tr><tr><td style="text-align:center;"><code>value</code></td><td style="text-align:center;"><code>str</code><br><code>None</code><br><code>False</code></td><td style="text-align:center;"><code>None</code></td><td>参数的值。带值的参数传入属性值，没有值的传入<code>None</code>。<br>如传入<code>False</code>，删除该参数。</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong> 无值和有值的参数设置</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置启动时最大化</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--start-maximized&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置初始窗口大小</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--window-size&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;800,600&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用来宾模式打开浏览器</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--guest&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-remove-argument" tabindex="-1">📌 <code>remove_argument()</code> <a class="header-anchor" href="#📌-remove-argument" aria-label="Permalink to &quot;📌 `remove_argument()`&quot;">​</a></h3><p>此方法用于在启动配置中删除一个启动参数，只要传入参数名称即可，不需要传入值。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>arg</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>参数名称，有值的设置项传入设置名称即可</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象自身</td></tr></tbody></table><p><strong>示例：</strong> 删除无值和有值的参数设置</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除--start-maximized参数</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.remove_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--start-maximized&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除--window-size参数</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.remove_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--window-size&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-clear-arguments" tabindex="-1">📌 <code>clear_arguments()</code> <a class="header-anchor" href="#📌-clear-arguments" aria-label="Permalink to &quot;📌 `clear_arguments()`&quot;">​</a></h3><p>此方法用于清空已设置的<code>arguments</code>参数。</p><p><strong>参数：</strong> 无</p><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象自身</td></tr></tbody></table><hr><h2 id="✅️️-运行路径及端口" tabindex="-1">✅️️ 运行路径及端口 <a class="header-anchor" href="#✅️️-运行路径及端口" aria-label="Permalink to &quot;✅️️ 运行路径及端口&quot;">​</a></h2><p>这部分是浏览器路径、用户文件夹路径和端口的设置。</p><h3 id="📌-set-browser-path" tabindex="-1">📌 <code>set_browser_path()</code> <a class="header-anchor" href="#📌-set-browser-path" aria-label="Permalink to &quot;📌 `set_browser_path()`&quot;">​</a></h3><p>此方法用于设置浏览器可执行文件路径。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;">必填</td><td>浏览器文件路径</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p>如果传入的字符串不是浏览器可执行文件路径，则会转为使用默认路径。</p><hr><h3 id="📌-set-tmp-path" tabindex="-1">📌 <code>set_tmp_path()</code> <a class="header-anchor" href="#📌-set-tmp-path" aria-label="Permalink to &quot;📌 `set_tmp_path()`&quot;">​</a></h3><p>此方法用于设置临时文件默认路径。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;">必填</td><td>用户数据文件夹默认路径</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h3 id="📌-set-local-port" tabindex="-1">📌 <code>set_local_port()</code> <a class="header-anchor" href="#📌-set-local-port" aria-label="Permalink to &quot;📌 `set_local_port()`&quot;">​</a></h3><p>此方法用于设置本地启动端口。</p><p>与<code>set_address()</code>、<code>auto_port()</code>互斥。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>port</code></td><td style="text-align:center;"><code>str</code><br><code>int</code></td><td style="text-align:center;">必填</td><td>端口号</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h3 id="📌-set-address" tabindex="-1">📌 <code>set_address()</code> <a class="header-anchor" href="#📌-set-address" aria-label="Permalink to &quot;📌 `set_address()`&quot;">​</a></h3><p>此方法用于设置浏览器地址，支持 &#39;ip:port&#39; 格式和 ws 连接。</p><p>和<code>set_local_port()</code>、<code>auto_port()</code>互斥。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>address</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>浏览器地址</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h3 id="📌-auto-port" tabindex="-1">📌 <code>auto_port()</code> <a class="header-anchor" href="#📌-auto-port" aria-label="Permalink to &quot;📌 `auto_port()`&quot;">​</a></h3><p>此方法用于设置是否使用自动分配的端口，启动一个全新的浏览器。</p><p>如果设置为<code>True</code>，程序会自动寻找一个可用端口，并在指定路径或系统临时文件夹创建一个文件夹，用于储存浏览器数据。</p><p>由于端口和用户文件夹都是唯一的，所以用这种方式启动的浏览器不会产生冲突，但也无法多次启动程序时重复接管同一个浏览器。</p><p><code>set_local_port()</code>、<code>set_address()</code>和<code>set_user_data_path()</code>方法，和<code>auto_port()</code>互斥，即以后调用的为准。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><pre><code>`auto_port()`支持多线程，但不支持多进程。  \n多进程使用时，可用`scope`参数指定每个进程使用的端口范围，以免发生冲突。\n</code></pre></div><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否开启自动分配端口和用户文件夹</td></tr><tr><td style="text-align:center;"><code>scope</code></td><td style="text-align:center;"><code>Tuple[int, int]</code></td><td style="text-align:center;"><code>None</code></td><td>指定端口范围，不含最后的数字，为<code>None</code>则使用<code>[9600-19600)</code></td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.auto_port(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">注意</p><pre><code>启用此功能后即会获取端口和新建临时用户数据文件夹，若此时用`save()`方法保存配置到 ini 文件，ini 文件中的设置会被该端口和文件夹路径覆盖。这个覆盖对使用并没有很大影响。\n</code></pre></div><hr><h3 id="📌-set-user-data-path" tabindex="-1">📌 <code>set_user_data_path()</code> <a class="header-anchor" href="#📌-set-user-data-path" aria-label="Permalink to &quot;📌 `set_user_data_path()`&quot;">​</a></h3><p>此方法用于设置用户文件夹路径。用户文件夹用于存储当前登陆浏览器的账号在使用浏览器时留下的痕迹，包括设置选项等。</p><p>一般来说用户文件夹的名称是 <code>User Data</code>。对于默认情况下的 Windows 中的 Chrome 浏览器来说，此文件夹位于 <code>%USERPROFILE%\\AppData\\Local\\Google\\Chrome\\User Data\\</code>，也就是当前系统登陆的用户目录的 <code>AppData</code> 内。实际情况可能有变，实际路径请在浏览器输入 <code>chrome://version/</code>，查阅其中的<code>个人资料路径</code>或者叫<code>用户配置路径</code>。若要使用独立的用户信息，可以将 <code>User Data</code> 目录整个复制到自定的其他位置，然后在代码中使用 <code>set_user_data_path()</code> 方法，参数填入自定义位置路径，这样便可使用独立的用户文件夹信息。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;">必填</td><td>用户文件夹路径</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h3 id="📌-use-system-user-path" tabindex="-1">📌 <code>use_system_user_path()</code> <a class="header-anchor" href="#📌-use-system-user-path" aria-label="Permalink to &quot;📌 `use_system_user_path()`&quot;">​</a></h3><p>此方法设置是否使用系统安装的浏览器默认用户文件夹</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>bool</code>表示开关</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h3 id="📌-set-cache-path" tabindex="-1">📌 <code>set_cache_path()</code> <a class="header-anchor" href="#📌-set-cache-path" aria-label="Permalink to &quot;📌 `set_cache_path()`&quot;">​</a></h3><p>此方法用于设置缓存路径。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;">必填</td><td>缓存路径</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h3 id="📌-existing-only" tabindex="-1">📌 <code>existing_only()</code> <a class="header-anchor" href="#📌-existing-only" aria-label="Permalink to &quot;📌 `existing_only()`&quot;">​</a></h3><p>此方法设置是否仅使用已启动的浏览器，如连接目标浏览器失败，会抛出异常，不会启动新浏览器。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>bool</code>表示开关</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><div class="wwads-cn wwads-horizontal" data-id="317"></div><br><h2 id="✅️️-使用插件" tabindex="-1">✅️️ 使用插件 <a class="header-anchor" href="#✅️️-使用插件" aria-label="Permalink to &quot;✅️️ 使用插件&quot;">​</a></h2><p><code>add_extension()</code>和<code>remove_extensions()</code>用于设置浏览器启动时要加载的插件。可以指定数量不限的插件。</p><h3 id="📌-add-extension" tabindex="-1">📌 <code>add_extension()</code> <a class="header-anchor" href="#📌-add-extension" aria-label="Permalink to &quot;📌 `add_extension()`&quot;">​</a></h3><p>此方法用于添加一个插件到浏览器。</p><p>插件是临时方式加载，不会保留在用户文件夹。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;">必填</td><td>插件路径</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">Tips</p><pre><code>根据作者的经验，把插件文件解压到一个独立文件夹，然后把插件路径指向这个文件夹，会比较稳定。\n</code></pre></div><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.add_extension(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\S</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">witchyOmega</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-remove-extensions" tabindex="-1">📌 <code>remove_extensions()</code> <a class="header-anchor" href="#📌-remove-extensions" aria-label="Permalink to &quot;📌 `remove_extensions()`&quot;">​</a></h3><p>此方法用于移除配置对象中保存的所有插件路径。如需移除部分插件，请移除全部后再重新添加需要的插件。</p><p><strong>参数：</strong> 无</p><p><strong>返回：</strong> 配置对象自身</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.remove_extensions()</span></span></code></pre></div><hr><h2 id="✅️️-用户文件设置" tabindex="-1">✅️️ 用户文件设置 <a class="header-anchor" href="#✅️️-用户文件设置" aria-label="Permalink to &quot;✅️️ 用户文件设置&quot;">​</a></h2><p>除了启动参数，还有大量配置信息保存在浏览器的 <code>preferences</code> 文件中。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><pre><code>`preferences` 文件是Chromium内核浏览器的配置信息文件，与 DrissionPage 的 `configs.ini` 完全不同。\n</code></pre></div><p>以下方法用于对浏览器用户文件进行设置。</p><h3 id="📌-set-user" tabindex="-1">📌 <code>set_user()</code> <a class="header-anchor" href="#📌-set-user" aria-label="Permalink to &quot;📌 `set_user()`&quot;">​</a></h3><p>Chromium 浏览器支持多用户配置，我们可以选择使用哪一个。默认为<code>&#39;Default&#39;</code>。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>user</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>&#39;Default&#39;</code></td><td>用户配置文件夹名称</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_user(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Profile 1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-set-pref" tabindex="-1">📌 <code>set_pref()</code> <a class="header-anchor" href="#📌-set-pref" aria-label="Permalink to &quot;📌 `set_pref()`&quot;">​</a></h3><p>此方法用于设置用户配置文件里的一个配置项。</p><p>在哪里可以查到所有的配置项？作者也没找到，知道的请告知。谢谢。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>arg</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>设置项名称</td></tr><tr><td style="text-align:center;"><code>value</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>设置项值</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 禁止所有弹出窗口</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_pref(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;profile.default_content_settings.popups&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 隐藏是否保存密码的提示</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_pref(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;credentials_enable_service&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-remove-pref" tabindex="-1">📌 <code>remove_pref()</code> <a class="header-anchor" href="#📌-remove-pref" aria-label="Permalink to &quot;📌 `remove_pref()`&quot;">​</a></h3><p>此方法用于在当前配置对象中删除一个<code>pref</code>配置项。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>arg</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>设置项名称</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.remove_pref(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;profile.default_content_settings.popups&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-remove-pref-from-file" tabindex="-1">📌 <code>remove_pref_from_file()</code> <a class="header-anchor" href="#📌-remove-pref-from-file" aria-label="Permalink to &quot;📌 `remove_pref_from_file()`&quot;">​</a></h3><p>此方法用于在用户配置文件删除一个配置项。注意与上一个方法不一样，如果用户配置文件中已经存在某个项，用<code>remove_pref()</code> 是不能删除的，只能用<code>remove_pref_from_file()</code>删除。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>arg</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>设置项名称</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.remove_pref_from_file(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;profile.default_content_settings.popups&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-clear-prefs" tabindex="-1">📌 <code>clear_prefs()</code> <a class="header-anchor" href="#📌-clear-prefs" aria-label="Permalink to &quot;📌 `clear_prefs()`&quot;">​</a></h3><p>此方法用于清空已设置的<code>prefs</code>参数。</p><p><strong>参数：</strong> 无</p><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象自身</td></tr></tbody></table><hr><h2 id="✅️️-运行参数设置" tabindex="-1">✅️️ 运行参数设置 <a class="header-anchor" href="#✅️️-运行参数设置" aria-label="Permalink to &quot;✅️️ 运行参数设置&quot;">​</a></h2><p>页面对象运行时需要用到的参数，也可以在<code>ChromiumOptions</code>中设置。</p><h3 id="📌-set-timeouts" tabindex="-1">📌 <code>set_timeouts()</code> <a class="header-anchor" href="#📌-set-timeouts" aria-label="Permalink to &quot;📌 `set_timeouts()`&quot;">​</a></h3><p>此方法用于设置几种超时时间，单位为秒。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>base</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>默认超时时间，用于元素等待、alert 等待、<code>WebPage</code>的 s 模式连接等等，除以下两个参数的场景，都使用这个设置</td></tr><tr><td style="text-align:center;"><code>page_load</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>页面加载超时时间</td></tr><tr><td style="text-align:center;"><code>script</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>JavaScript 运行超时时间</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_timeouts(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-set-retry" tabindex="-1">📌 <code>set_retry()</code> <a class="header-anchor" href="#📌-set-retry" aria-label="Permalink to &quot;📌 `set_retry()`&quot;">​</a></h3><p>此方法用于设置页面连接超时时的重试次数和间隔。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>times</code></td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>None</code></td><td>连接失败重试次数</td></tr><tr><td style="text-align:center;"><code>interval</code></td><td style="text-align:center;"><code>float</code></td><td style="text-align:center;"><code>None</code></td><td>连接失败重试间隔（秒）</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h3 id="📌-set-load-mode" tabindex="-1">📌 <code>set_load_mode()</code> <a class="header-anchor" href="#📌-set-load-mode" aria-label="Permalink to &quot;📌 `set_load_mode()`&quot;">​</a></h3><p>此方法用于设置网页加载策略。</p><p>加载策略是指强制页面停止加载的时机，如加载完 DOM 即停止，不加载图片资源等，以提高自动化效率。</p><p>无论设置哪种策略，加载时间都不会超过<code>set_timeouts()</code>中<code>page_load</code>参数设置的时间。</p><p>加载策略：</p><ul><li><p><code>&#39;normal&#39;</code>：阻塞进程，等待所有资源下载完成（默认）</p></li><li><p><code>&#39;eager&#39;</code>：DOM 就绪即停止加载</p></li><li><p><code>&#39;none&#39;</code>：网页连接成功即停止加载</p></li></ul><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>value</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>可接收<code>&#39;normal&#39;</code>、<code>&#39;eager&#39;</code>、<code>&#39;none&#39;</code></td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_load_mode(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;eager&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-set-proxy" tabindex="-1">📌 <code>set_proxy()</code> <a class="header-anchor" href="#📌-set-proxy" aria-label="Permalink to &quot;📌 `set_proxy()`&quot;">​</a></h3><p>该方法用于设置浏览器代理。</p><p>该设置在浏览器启动时一次性设置，设置后不能修改。且不支持带账号的代理。</p><p>如果需要运行时修改代理，或使用带账号的代理，可以用插件自行实现。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>proxy</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>格式：协议://ip:port<br>当不指定协议时，默认使用 http 代理</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_proxy(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://localhost:1080&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-set-download-path" tabindex="-1">📌 <code>set_download_path()</code> <a class="header-anchor" href="#📌-set-download-path" aria-label="Permalink to &quot;📌 `set_download_path()`&quot;">​</a></h3><p>此方法用于设置下载文件保存路径。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;">必填</td><td>下载路径</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h2 id="✅️️-其它设置" tabindex="-1">✅️️ 其它设置 <a class="header-anchor" href="#✅️️-其它设置" aria-label="Permalink to &quot;✅️️ 其它设置&quot;">​</a></h2><p>作者将一些常用的配置封装成方法，可以直接调用。</p><h3 id="📌-headless" tabindex="-1">📌 <code>headless()</code> <a class="header-anchor" href="#📌-headless" aria-label="Permalink to &quot;📌 `headless()`&quot;">​</a></h3><p>该方法用于设置是否以无界面模式启动浏览器。</p><p>如果指定端口已存在运行中的非无头浏览器，会先关闭已有浏览器再启动新的。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>和<code>False</code>表示开或关</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.headless(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-new-env" tabindex="-1">📌 <code>new_env()</code> <a class="header-anchor" href="#📌-new-env" aria-label="Permalink to &quot;📌 `new_env()`&quot;">​</a></h3><p>该方法用于设置是否使用全新环境创建浏览器。</p><p>如果指定端口已存在运行中的浏览器，会先关闭已有浏览器再启动新的。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>和<code>False</code>表示开或关</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h3 id="📌-set-flag" tabindex="-1">📌 <code>set_flag()</code> <a class="header-anchor" href="#📌-set-flag" aria-label="Permalink to &quot;📌 `set_flag()`&quot;">​</a></h3><p>此方法用于设置实验项，即<code>&#39;chrome://flags&#39;</code>中的项目。</p><p>设置无值的项，无须设置<code>value</code>参数，否则在该参数传入要设置的值。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>flag</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>设置项名称</td></tr><tr><td style="text-align:center;"><code>value</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>设置项值</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumOptions</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumOptions()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_flag(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;temporary-unexpire-flags-m118&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 有值</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_flag(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;disable-accelerated-2d-canvas&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 无值</span></span></code></pre></div><hr><h3 id="📌-clear-flags-in-file" tabindex="-1">📌 <code>clear_flags_in_file()</code> <a class="header-anchor" href="#📌-clear-flags-in-file" aria-label="Permalink to &quot;📌 `clear_flags_in_file()`&quot;">​</a></h3><p>此方法用于删除浏览器配置文件中已设置的实验项。</p><p><strong>参数：</strong> 无</p><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h3 id="📌-clear-flags" tabindex="-1">📌 <code>clear_flags()</code> <a class="header-anchor" href="#📌-clear-flags" aria-label="Permalink to &quot;📌 `clear_flags()`&quot;">​</a></h3><p>此方法用于清空本对象中已设置的<code>flags</code>参数。</p><p><strong>参数：</strong> 无</p><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象自身</td></tr></tbody></table><hr><h3 id="📌-incognito" tabindex="-1">📌 <code>incognito()</code> <a class="header-anchor" href="#📌-incognito" aria-label="Permalink to &quot;📌 `incognito()`&quot;">​</a></h3><p>该方法用于设置是否以无痕模式启动浏览器。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>和<code>False</code>表示开或关</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h3 id="📌-ignore-certificate-errors" tabindex="-1">📌 <code>ignore_certificate_errors()</code> <a class="header-anchor" href="#📌-ignore-certificate-errors" aria-label="Permalink to &quot;📌 `ignore_certificate_errors()`&quot;">​</a></h3><p>该方法用于设置是否忽略证书错误。可以解决访问网页时出现的“您的连接不是私密连接”、“你的连接不是专用连接”等问题。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>和<code>False</code>表示开或关</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><hr><h3 id="📌-no-imgs" tabindex="-1">📌 <code>no_imgs()</code> <a class="header-anchor" href="#📌-no-imgs" aria-label="Permalink to &quot;📌 `no_imgs()`&quot;">​</a></h3><p>该方法用于设置是否禁止加载图片。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>和<code>False</code>表示开或关</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.no_imgs(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-no-js" tabindex="-1">📌 <code>no_js()</code> <a class="header-anchor" href="#📌-no-js" aria-label="Permalink to &quot;📌 `no_js()`&quot;">​</a></h3><p>该方法用于设置是否禁用 JavaScript。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>和<code>False</code>表示开或关</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.no_js(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-mute" tabindex="-1">📌 <code>mute()</code> <a class="header-anchor" href="#📌-mute" aria-label="Permalink to &quot;📌 `mute()`&quot;">​</a></h3><p>该方法用于设置是否静音。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>on_off</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>和<code>False</code>表示开或关</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.mute(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-set-user-agent" tabindex="-1">📌 <code>set_user_agent()</code> <a class="header-anchor" href="#📌-set-user-agent" aria-label="Permalink to &quot;📌 `set_user_agent()`&quot;">​</a></h3><p>该方法用于设置 user agent。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>user_agent</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>user agent文本</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>ChromiumOptions</code></td><td>配置对象本身</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.set_user_agent(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">user_agent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Mozilla/5.0 (Macintos.....&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h2 id="✅️️-保存设置到文件" tabindex="-1">✅️️ 保存设置到文件 <a class="header-anchor" href="#✅️️-保存设置到文件" aria-label="Permalink to &quot;✅️️ 保存设置到文件&quot;">​</a></h2><p>ini 文件是 DrissionPage 的配置文件，持久化记载一些配置参数。您可以把不同的配置保存到各自的 ini 文件，以便适应不同的场景。</p><h3 id="📌-save" tabindex="-1">📌 <code>save()</code> <a class="header-anchor" href="#📌-save" aria-label="Permalink to &quot;📌 `save()`&quot;">​</a></h3><p>此方法用于保存配置项到一个 ini 文件。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;"><code>None</code></td><td>ini 文件的路径， 传入<code>None</code>保存到当前读取的配置文件</td></tr></tbody></table><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>str</code></td><td>保存的 ini 文件绝对路径</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 保存当前读取的ini文件</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.save()</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 把当前配置保存到指定的路径</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.save(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">D:</span><span style="--shiki-light:#22863A;--shiki-light-font-weight:bold;--shiki-dark:#85E89D;--shiki-dark-font-weight:bold;">\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">mp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\s</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">ettings</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">ini</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-save-to-default" tabindex="-1">📌 <code>save_to_default()</code> <a class="header-anchor" href="#📌-save-to-default" aria-label="Permalink to &quot;📌 `save_to_default()`&quot;">​</a></h3><p>此方法用于保存配置项到固定的默认 ini 文件。默认 ini 文件是指随 DrissionPage 内置的那个。</p><p>默认 ini 文件默认的路径是 Python 安装目录中的 <code>Lib\\site-packages\\DrissionPage\\_configs\\configs.ini</code>。</p><p>ini 文件初始内容点<a href="http://DrissionPage.cn/advance/ini" target="_blank" rel="noreferrer">这里</a>。</p><p><strong>参数：</strong> 无</p><table tabindex="0"><thead><tr><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td><code>str</code></td><td>保存的 ini 文件绝对路径</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">co.save_to_default()</span></span></code></pre></div><hr><h2 id="✅️️-chromiumoptions属性" tabindex="-1">✅️️ <code>ChromiumOptions</code>属性 <a class="header-anchor" href="#✅️️-chromiumoptions属性" aria-label="Permalink to &quot;✅️️ `ChromiumOptions`属性&quot;">​</a></h2><h3 id="📌-address" tabindex="-1">📌 <code>address</code> <a class="header-anchor" href="#📌-address" aria-label="Permalink to &quot;📌 `address`&quot;">​</a></h3><p>该属性为要控制的浏览器地址，格式为 ip:port，默认为<code>&#39;127.0.0.1:9222&#39;</code>。</p><p><strong>类型：</strong><code>str</code></p><hr><h3 id="📌-browser-path" tabindex="-1">📌 <code>browser_path</code> <a class="header-anchor" href="#📌-browser-path" aria-label="Permalink to &quot;📌 `browser_path`&quot;">​</a></h3><p>该属性返回浏览器可执行文件的路径。</p><p><strong>类型：</strong><code>str</code></p><hr><h3 id="📌-user-data-path" tabindex="-1">📌 <code>user_data_path</code> <a class="header-anchor" href="#📌-user-data-path" aria-label="Permalink to &quot;📌 `user_data_path`&quot;">​</a></h3><p>该属性返回用户数据文件夹路径。</p><p><strong>类型：</strong><code>str</code></p><hr><h3 id="📌-tmp-path" tabindex="-1">📌 <code>tmp_path</code> <a class="header-anchor" href="#📌-tmp-path" aria-label="Permalink to &quot;📌 `tmp_path`&quot;">​</a></h3><p>该属性返回临时文件夹路径，可用于保存自动分配的用户文件夹路径。</p><p><strong>类型：</strong><code>str</code></p><hr><h3 id="📌-download-path" tabindex="-1">📌 <code>download_path</code> <a class="header-anchor" href="#📌-download-path" aria-label="Permalink to &quot;📌 `download_path`&quot;">​</a></h3><p>该属性返回默认下载路径文件路径。</p><p><strong>类型：</strong><code>str</code></p><hr><h3 id="📌-user" tabindex="-1">📌 <code>user</code> <a class="header-anchor" href="#📌-user" aria-label="Permalink to &quot;📌 `user`&quot;">​</a></h3><p>该属性返回用户配置文件夹名称。</p><p><strong>类型：</strong><code>str</code></p><hr><h3 id="📌-load-mode" tabindex="-1">📌 <code>load_mode</code> <a class="header-anchor" href="#📌-load-mode" aria-label="Permalink to &quot;📌 `load_mode`&quot;">​</a></h3><p>该属性返回页面加载策略。有<code>&#39;normal&#39;</code>、<code>&#39;eager&#39;</code>、<code>&#39;none&#39;</code>三种</p><p><strong>类型：</strong><code>str</code></p><hr><h3 id="📌-timeouts" tabindex="-1">📌 <code>timeouts</code> <a class="header-anchor" href="#📌-timeouts" aria-label="Permalink to &quot;📌 `timeouts`&quot;">​</a></h3><p>该属性返回超时设置。包括三种：<code>&#39;base&#39;</code>、<code>&#39;page_load&#39;</code>、<code>&#39;script&#39;</code>。</p><p><strong>类型：</strong><code>dict</code></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(co.timeouts)</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    &#39;base&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10,</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    &#39;page_load&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 30,</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    &#39;script&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="📌-retry-times" tabindex="-1">📌 <code>retry_times</code> <a class="header-anchor" href="#📌-retry-times" aria-label="Permalink to &quot;📌 `retry_times`&quot;">​</a></h3><p>该属性返回连接失败时的重试次数。</p><p><strong>类型：</strong><code>int</code></p><hr><h3 id="📌-retry-interval" tabindex="-1">📌 <code>retry_interval</code> <a class="header-anchor" href="#📌-retry-interval" aria-label="Permalink to &quot;📌 `retry_interval`&quot;">​</a></h3><p>该属性返回连接失败时的重试间隔（秒）。</p><p><strong>类型：</strong><code>float</code></p><hr><h3 id="📌-proxy" tabindex="-1">📌 <code>proxy</code> <a class="header-anchor" href="#📌-proxy" aria-label="Permalink to &quot;📌 `proxy`&quot;">​</a></h3><p>该属性返回代理设置。</p><p><strong>类型：</strong><code>str</code></p><hr><h3 id="📌-arguments" tabindex="-1">📌 <code>arguments</code> <a class="header-anchor" href="#📌-arguments" aria-label="Permalink to &quot;📌 `arguments`&quot;">​</a></h3><p>该属性以<code>list</code>形式返回浏览器启动参数。</p><p><strong>类型：</strong><code>list</code></p><hr><h3 id="📌-extensions" tabindex="-1">📌 <code>extensions</code> <a class="header-anchor" href="#📌-extensions" aria-label="Permalink to &quot;📌 `extensions`&quot;">​</a></h3><p>该属性以<code>list</code>形式返回要加载的插件路径。</p><p><strong>类型：</strong><code>list</code></p><hr><h3 id="📌-preferences" tabindex="-1">📌 <code>preferences</code> <a class="header-anchor" href="#📌-preferences" aria-label="Permalink to &quot;📌 `preferences`&quot;">​</a></h3><p>该属性返回用户首选项配置。</p><p><strong>类型：</strong><code>dict</code></p><hr><h3 id="📌-system-user-path" tabindex="-1">📌 <code>system_user_path</code> <a class="header-anchor" href="#📌-system-user-path" aria-label="Permalink to &quot;📌 `system_user_path`&quot;">​</a></h3><p>该属性返回是否使用系统按照的浏览器的用户文件夹。</p><p><strong>类型：</strong><code>bool</code></p><hr><h3 id="📌-is-existing-only" tabindex="-1">📌 <code>is_existing_only</code> <a class="header-anchor" href="#📌-is-existing-only" aria-label="Permalink to &quot;📌 `is_existing_only`&quot;">​</a></h3><p>该属性返回是否仅使用已打开的浏览器。</p><p><strong>类型：</strong><code>bool</code></p><hr><h3 id="📌-is-auto-port" tabindex="-1">📌 <code>is_auto_port</code> <a class="header-anchor" href="#📌-is-auto-port" aria-label="Permalink to &quot;📌 `is_auto_port`&quot;">​</a></h3><p>该属性返回是否仅使用自动分配端口和用户文件夹路径。</p><p><strong>类型：</strong><code>bool</code></p><hr><h3 id="📌-is-headless" tabindex="-1">📌 <code>is_headless</code> <a class="header-anchor" href="#📌-is-headless" aria-label="Permalink to &quot;📌 `is_headless`&quot;">​</a></h3><p>该属性返回是否以无头模式启动浏览器。</p><p><strong>类型：</strong><code>bool</code></p>',362)])])}const k=e(d,[["render",n]]);export{g as __pageData,k as default};
