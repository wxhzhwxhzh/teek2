import{_ as t,c as a,o,aM as d}from"./chunks/framework.CWgDeAH8.js";const g=JSON.parse('{"title":"🛰️ 获取网页信息","description":"","frontmatter":{"id":"get_page_info","title":"🛰️ 获取网页信息"},"headers":[],"relativePath":"dp/2.浏览器控制/get_page_info.md","filePath":"dp/2.浏览器控制/get_page_info.md"}'),c={name:"dp/2.浏览器控制/get_page_info.md"};function i(s,e,r,l,n,h){return o(),a("div",null,[...e[0]||(e[0]=[d('<h1 id="🛰️-获取网页信息" tabindex="-1">🛰️ 获取网页信息 <a class="header-anchor" href="#🛰️-获取网页信息" aria-label="Permalink to &quot;🛰️ 获取网页信息&quot;">​</a></h1><div class="wwads-cn wwads-horizontal" data-id="317"></div><br><p>成功访问网页后，可使用 Tab 对象属性和方法获取页面信息。</p><h2 id="✅️️-页面信息" tabindex="-1">✅️️ 页面信息 <a class="header-anchor" href="#✅️️-页面信息" aria-label="Permalink to &quot;✅️️ 页面信息&quot;">​</a></h2><h3 id="📌-html" tabindex="-1">📌 <code>html</code> <a class="header-anchor" href="#📌-html" aria-label="Permalink to &quot;📌 `html`&quot;">​</a></h3><p>此属性返回当前页面 html 文本。</p><div class="info custom-block"><p class="custom-block-title">注意</p><pre><code>html 文本不包含`&lt;iframe&gt;`元素内容。\n</code></pre></div><p><strong>返回类型：</strong><code>str</code></p><hr><h3 id="📌-json" tabindex="-1">📌 <code>json</code> <a class="header-anchor" href="#📌-json" aria-label="Permalink to &quot;📌 `json`&quot;">​</a></h3><p>此属性把请求内容解析成 json。</p><p>假如用浏览器访问会返回 <code>*.json</code> 文件的 url，浏览器会把 json 数据显示出来，这个参数可以把这些数据转换为<code>dict</code>格式。</p><p><strong>返回类型：</strong><code>dict</code></p><hr><h3 id="📌-title" tabindex="-1">📌 <code>title</code> <a class="header-anchor" href="#📌-title" aria-label="Permalink to &quot;📌 `title`&quot;">​</a></h3><p>此属性返回当前页面<code>title</code>文本。</p><p><strong>返回类型：</strong><code>str</code></p><hr><h3 id="📌-user-agent" tabindex="-1">📌 <code>user_agent</code> <a class="header-anchor" href="#📌-user-agent" aria-label="Permalink to &quot;📌 `user_agent`&quot;">​</a></h3><p>此属性返回当前页面 user agent 信息。</p><p><strong>返回类型：</strong><code>str</code></p><hr><h3 id="📌-save" tabindex="-1">📌 <code>save()</code> <a class="header-anchor" href="#📌-save" aria-label="Permalink to &quot;📌 `save()`&quot;">​</a></h3><p>把当前页面保存为文件，同时返回保存的内容。</p><p>如果<code>path</code>和<code>name</code>参数都为<code>None</code>，只返回内容，不保存文件。</p><p>Page 对象和 Tab 对象有这个方法。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;"><code>None</code></td><td>保存路径，为<code>None</code>且<code>name</code>不为<code>None</code>时保存到当前路径</td></tr><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>保存的文件名，为<code>None</code>且<code>path</code>不为<code>None</code>时使用 title 值</td></tr><tr><td style="text-align:center;"><code>as_pdf</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>为<code>Ture</code>保存为 pdf，否则保存为 mhtml 且忽略<code>kwargs</code>参数</td></tr><tr><td style="text-align:center;"><code>**kwargs</code></td><td style="text-align:center;">多种</td><td style="text-align:center;">无</td><td>pdf 生成参数</td></tr></tbody></table><p>pdf 生成参数包括：<code>landscape</code>, <code>displayHeaderFooter</code>, <code>printBackground</code>, <code>scale</code>, <code>paperWidth</code>, <code>paperHeight</code>, <code>marginTop</code>, <code>marginBottom</code>, <code>marginLeft</code>, <code>marginRight</code>, <code>pageRanges</code>, <code>headerTemplate</code>, <code>footerTemplate</code>, <code>preferCSSPageSize</code>, <code>generateTaggedPDF</code>, <code>generateDocumentOutline</code></p><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>as_pdf</code>为<code>False</code>时返回 mhtml 文本</td></tr><tr><td style="text-align:center;"><code>bytes</code></td><td style="text-align:center;"><code>as_pdf</code>为<code>True</code>时返回文件字节数据</td></tr></tbody></table><hr><h2 id="✅️️-运行状态信息" tabindex="-1">✅️️ 运行状态信息 <a class="header-anchor" href="#✅️️-运行状态信息" aria-label="Permalink to &quot;✅️️ 运行状态信息&quot;">​</a></h2><h3 id="📌-url" tabindex="-1">📌 <code>url</code> <a class="header-anchor" href="#📌-url" aria-label="Permalink to &quot;📌 `url`&quot;">​</a></h3><p>此属性返回当前访问的 url。</p><p><strong>返回类型：</strong><code>str</code></p><hr><h3 id="📌-tab-id" tabindex="-1">📌 <code>tab_id</code> <a class="header-anchor" href="#📌-tab-id" aria-label="Permalink to &quot;📌 `tab_id`&quot;">​</a></h3><p><strong>返回类型：</strong><code>str</code></p><p>此属性返回当前标签页的 id。</p><hr><h3 id="📌-states-is-loading" tabindex="-1">📌 <code>states.is_loading</code> <a class="header-anchor" href="#📌-states-is-loading" aria-label="Permalink to &quot;📌 `states.is_loading`&quot;">​</a></h3><p>此属性返回页面是否正在加载状态。</p><p><strong>返回类型：</strong><code>bool</code></p><hr><h3 id="📌-states-is-alive" tabindex="-1">📌 <code>states.is_alive</code> <a class="header-anchor" href="#📌-states-is-alive" aria-label="Permalink to &quot;📌 `states.is_alive`&quot;">​</a></h3><p>此属性返回页面是否仍然可用，标签页已关闭则返回<code>False</code>。</p><p><strong>返回类型：</strong><code>bool</code></p><hr><h3 id="📌-states-ready-state" tabindex="-1">📌 <code>states.ready_state</code> <a class="header-anchor" href="#📌-states-ready-state" aria-label="Permalink to &quot;📌 `states.ready_state`&quot;">​</a></h3><p>此属性返回页面当前加载状态，有 4 种：</p><ul><li><code>&#39;connecting&#39;</code>： 网页连接中</li><li><code>&#39;loading&#39;</code>：表示文档还在加载中</li><li><code>&#39;interactive&#39;</code>：DOM 已加载，但资源未加载完成</li><li><code>&#39;complete&#39;</code>：所有内容已完成加载</li></ul><p><strong>返回类型：</strong><code>str</code></p><hr><h3 id="📌-url-available" tabindex="-1">📌 <code>url_available</code> <a class="header-anchor" href="#📌-url-available" aria-label="Permalink to &quot;📌 `url_available`&quot;">​</a></h3><p>此属性以布尔值返回当前链接是否可用。</p><p><strong>返回类型：</strong><code>bool</code></p><hr><h3 id="📌-states-has-alert" tabindex="-1">📌 <code>states.has_alert</code> <a class="header-anchor" href="#📌-states-has-alert" aria-label="Permalink to &quot;📌 `states.has_alert`&quot;">​</a></h3><p>此属性以布尔值返回页面是否存在弹出框。</p><p><strong>返回类型：</strong><code>bool</code></p><hr><h2 id="✅️️-窗口信息" tabindex="-1">✅️️ 窗口信息 <a class="header-anchor" href="#✅️️-窗口信息" aria-label="Permalink to &quot;✅️️ 窗口信息&quot;">​</a></h2><h3 id="📌-rect-size" tabindex="-1">📌 <code>rect.size</code> <a class="header-anchor" href="#📌-rect-size" aria-label="Permalink to &quot;📌 `rect.size`&quot;">​</a></h3><p>以<code>tuple</code>返回页面大小，格式：(宽, 高)。</p><p><strong>返回类型：</strong><code>Tuple[int, int]</code></p><hr><h3 id="📌-rect-window-size" tabindex="-1">📌 <code>rect.window_size</code> <a class="header-anchor" href="#📌-rect-window-size" aria-label="Permalink to &quot;📌 `rect.window_size`&quot;">​</a></h3><p>此属性以<code>tuple</code>返回窗口大小，格式：(宽, 高)。</p><p><strong>返回类型：</strong><code>Tuple[int, int]</code></p><hr><h3 id="📌-rect-window-location" tabindex="-1">📌 <code>rect.window_location</code> <a class="header-anchor" href="#📌-rect-window-location" aria-label="Permalink to &quot;📌 `rect.window_location`&quot;">​</a></h3><p>此属性以<code>tuple</code>返回窗口在屏幕上的坐标，左上角为(0, 0)。</p><p><strong>返回类型：</strong><code>Tuple[int, int]</code></p><hr><h3 id="📌-rect-window-state" tabindex="-1">📌 <code>rect.window_state</code> <a class="header-anchor" href="#📌-rect-window-state" aria-label="Permalink to &quot;📌 `rect.window_state`&quot;">​</a></h3><p>此属性以返回窗口当前状态，有<code>&#39;normal&#39;</code>、<code>&#39;fullscreen&#39;</code>、<code>&#39;maximized&#39;</code>、 <code>&#39;minimized&#39;</code>几种。</p><p><strong>返回类型：</strong><code>str</code></p><hr><h3 id="📌-rect-viewport-size" tabindex="-1">📌 <code>rect.viewport_size</code> <a class="header-anchor" href="#📌-rect-viewport-size" aria-label="Permalink to &quot;📌 `rect.viewport_size`&quot;">​</a></h3><p>此属性以<code>tuple</code>返回视口大小，不含滚动条，格式：(宽, 高)。</p><p><strong>返回类型：</strong><code>Tuple[int, int]</code></p><hr><h3 id="📌-rect-viewport-size-with-scrollbar" tabindex="-1">📌 <code>rect.viewport_size_with_scrollbar</code> <a class="header-anchor" href="#📌-rect-viewport-size-with-scrollbar" aria-label="Permalink to &quot;📌 `rect.viewport_size_with_scrollbar`&quot;">​</a></h3><p>此属性以<code>tuple</code>返回浏览器窗口大小，含滚动条，格式：(宽, 高)。</p><p><strong>返回类型：</strong><code>Tuple[int, int]</code></p><hr><h3 id="📌-rect-page-location" tabindex="-1">📌 <code>rect.page_location</code> <a class="header-anchor" href="#📌-rect-page-location" aria-label="Permalink to &quot;📌 `rect.page_location`&quot;">​</a></h3><p>此属性以<code>tuple</code>返回页面左上角在屏幕中坐标，左上角为(0, 0)。</p><p><strong>返回类型：</strong><code>Tuple[int, int]</code></p><hr><h3 id="📌-rect-viewport-location" tabindex="-1">📌 <code>rect.viewport_location</code> <a class="header-anchor" href="#📌-rect-viewport-location" aria-label="Permalink to &quot;📌 `rect.viewport_location`&quot;">​</a></h3><p>此属性以<code>tuple</code>返回视口在屏幕中坐标，左上角为(0, 0)。</p><p><strong>返回类型：</strong><code>Tuple[int, int]</code></p><hr><h3 id="📌-rect-scroll-position" tabindex="-1">📌 <code>rect.scroll_position</code> <a class="header-anchor" href="#📌-rect-scroll-position" aria-label="Permalink to &quot;📌 `rect.scroll_position`&quot;">​</a></h3><p>此属性返回页面滚动条位置，格式：(x, y)。</p><p><strong>类型：</strong><code>Tuple[float, float]</code></p><hr><h2 id="✅️️-配置参数信息" tabindex="-1">✅️️ 配置参数信息 <a class="header-anchor" href="#✅️️-配置参数信息" aria-label="Permalink to &quot;✅️️ 配置参数信息&quot;">​</a></h2><h3 id="📌-timeout" tabindex="-1">📌 <code>timeout</code> <a class="header-anchor" href="#📌-timeout" aria-label="Permalink to &quot;📌 `timeout`&quot;">​</a></h3><p>此属性为整体默认超时时间（秒），包括元素查找、点击、处理提示框、列表选择等需要用到超时设置的地方，都以这个数据为默认值。默认为<code>10</code>。</p><p><strong>返回类型：</strong><code>int</code>、<code>float</code></p><hr><h3 id="📌-timeouts" tabindex="-1">📌 <code>timeouts</code> <a class="header-anchor" href="#📌-timeouts" aria-label="Permalink to &quot;📌 `timeouts`&quot;">​</a></h3><p>此属性以字典方式返回三种超时时间（秒）。</p><ul><li><code>&#39;base&#39;</code>：与<code>timeout</code>属性是同一个值</li><li><code>&#39;page_load&#39;</code>：用于等待页面加载</li><li><code>&#39;script&#39;</code>：用于等待脚本执行</li></ul><p><strong>返回类型：</strong><code>dict</code></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tab.timeouts)</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{&#39;base&#39;: 10, &#39;page_load&#39;: 30.0, &#39;script&#39;: 30.0}</span></span></code></pre></div><hr><h3 id="📌-retry-times" tabindex="-1">📌 <code>retry_times</code> <a class="header-anchor" href="#📌-retry-times" aria-label="Permalink to &quot;📌 `retry_times`&quot;">​</a></h3><p>此属性为网络连接失败时的重试次数，默认为<code>3</code>。</p><p><strong>返回类型：</strong><code>int</code></p><hr><h3 id="📌-retry-interval" tabindex="-1">📌 <code>retry_interval</code> <a class="header-anchor" href="#📌-retry-interval" aria-label="Permalink to &quot;📌 `retry_interval`&quot;">​</a></h3><p>此属性为网络连接失败时的重试等待间隔秒数，默认为<code>2</code>。</p><p><strong>返回类型：</strong><code>int</code>、<code>float</code></p><hr><h3 id="📌-load-mode" tabindex="-1">📌 <code>load_mode</code> <a class="header-anchor" href="#📌-load-mode" aria-label="Permalink to &quot;📌 `load_mode`&quot;">​</a></h3><p>此属性返回页面加载策略，有 3 种：</p><ul><li><code>&#39;normal&#39;</code>：等待页面所有资源完成加载</li><li><code>&#39;eager&#39;</code>：DOM 加载完成即停止</li><li><code>&#39;none&#39;</code>：页面完成连接即停止</li></ul><p><strong>返回类型：</strong><code>str</code></p><hr><h2 id="✅️️-cookies-和缓存信息" tabindex="-1">✅️️ cookies 和缓存信息 <a class="header-anchor" href="#✅️️-cookies-和缓存信息" aria-label="Permalink to &quot;✅️️ cookies 和缓存信息&quot;">​</a></h2><h3 id="📌-cookies" tabindex="-1">📌 <code>cookies()</code> <a class="header-anchor" href="#📌-cookies" aria-label="Permalink to &quot;📌 `cookies()`&quot;">​</a></h3><p>此方法以列表方式返回 cookies 信息。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>all_domains</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否返回所有 cookies，为<code>False</code>只返回当前 url 的</td></tr><tr><td style="text-align:center;"><code>all_info</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>返回的 cookies 是否包含所有信息，<code>False</code>时只包含<code>name</code>、<code>value</code>、<code>domain</code>信息</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>CookiesList</code></td><td>cookies 组成的列表</td></tr></tbody></table><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium().latest_tab</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://www.baidu.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab.cookies():</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i)</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{&#39;domain&#39;: &#39;.baidu.com&#39;, &#39;domain_specified&#39;: True, ......}</span></span>\n<span class="line"><span>......</span></span></code></pre></div><hr><h3 id="📌-指定返回类型" tabindex="-1">📌 指定返回类型 <a class="header-anchor" href="#📌-指定返回类型" aria-label="Permalink to &quot;📌 指定返回类型&quot;">​</a></h3><p><code>cookies()</code>方法返回的列表可转换为其它指定格式。</p><ul><li><code>cookies().as_str()</code>：<code>&#39;name1=value1; name2=value2&#39;</code>格式的字符串</li><li><code>cookies().as_dict()</code>：<code>{name1: value1, name2: value2}</code>格式的字典</li><li><code>cookies().as_json()</code>：json 格式的字符串</li></ul><div class="tip custom-block"><p class="custom-block-title">说明</p><pre><code>`as_str()`和`as_dict()`都只会保留`&#39;name&#39;`和`&#39;value&#39;`字段。\n</code></pre></div><hr><h3 id="📌-session-storage" tabindex="-1">📌 <code>session_storage()</code> <a class="header-anchor" href="#📌-session-storage" aria-label="Permalink to &quot;📌 `session_storage()`&quot;">​</a></h3><p>此方法用于获取 sessionStorage 信息，可获取全部或单个项。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>item</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>要获取的项目，为<code>None</code>则返回全部项目组成的字典</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>dict</code></td><td><code>item</code>参数为<code>None</code>时返回所有项目</td></tr><tr><td style="text-align:center;"><code>str</code></td><td>指定<code>item</code>时返回该项目内容</td></tr></tbody></table><hr><h3 id="📌-local-storage" tabindex="-1">📌 <code>local_storage()</code> <a class="header-anchor" href="#📌-local-storage" aria-label="Permalink to &quot;📌 `local_storage()`&quot;">​</a></h3><p>此方法用于获取 localStorage 信息，可获取全部或单个项。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>item</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>要获取的项目，为<code>None</code>则返回全部项目组成的字典</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>dict</code></td><td><code>item</code>参数为<code>None</code>时返回所有项目</td></tr><tr><td style="text-align:center;"><code>str</code></td><td>指定<code>item</code>时返回该项目内容</td></tr></tbody></table><hr>',149)])])}const b=t(c,[["render",i]]);export{g as __pageData,b as default};
