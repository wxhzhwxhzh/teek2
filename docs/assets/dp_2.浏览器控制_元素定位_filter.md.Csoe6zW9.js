import{_ as e,c as d,o as a,aM as i}from"./chunks/framework.Fs4ucY6U.js";const k=JSON.parse('{"title":"🔦 在结果列表中筛选","description":"","frontmatter":{"id":"filter","title":"🔦 在结果列表中筛选"},"headers":[],"relativePath":"dp/2.浏览器控制/元素定位/filter.md","filePath":"dp/2.浏览器控制/元素定位/filter.md"}'),s={name:"dp/2.浏览器控制/元素定位/filter.md"};function l(n,t,r,o,h,c){return a(),d("div",null,[...t[0]||(t[0]=[i('<h1 id="🔦-在结果列表中筛选" tabindex="-1">🔦 在结果列表中筛选 <a class="header-anchor" href="#🔦-在结果列表中筛选" aria-label="Permalink to &quot;🔦 在结果列表中筛选&quot;">​</a></h1><p>本节介绍在元素列表中按需要进行筛选，获取指定元素。</p><p><code>eles()</code>、<code>nexts()</code>等能够获取多个元素的方法，返回的列表可进行进一步筛选，以获取指定的元素。</p><div class="info custom-block"><p class="custom-block-title">说明</p><pre><code>浏览器页面对象和`SessionPage`产生的元素列表均有此功能，前者筛选功能比后者多。\n</code></pre></div><p><strong>示例1，筛选并返回元素列表：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium().latest_tab</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://www.baidu.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#s-top-left&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).eles(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t:a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取左上角导航栏内所有&lt;a&gt;元素</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eles.filter.displayed():  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 筛选出显示的元素列表并逐个打印文本</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ele.text, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39; &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">新闻</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hao123</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 地图</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 贴吧</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 视频</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 图片</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 网盘</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文库</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 更多</span></span></code></pre></div><p><strong>示例2，筛选并返回第一个元素：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium().latest_tab</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://www.baidu.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#s-top-left&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).eles(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t:a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取左上角导航栏内所有&lt;a&gt;元素</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eles.filter_one.displayed().text)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 筛选出显示的元素并返回第一个</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">新闻</span></span></code></pre></div><h2 id="✅️️-获取单个匹配元素" tabindex="-1">✅️️ 获取单个匹配元素 <a class="header-anchor" href="#✅️️-获取单个匹配元素" aria-label="Permalink to &quot;✅️️ 获取单个匹配元素&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">说明</p><pre><code>静态元素列表只有`filter_one.attr()`和`filter_one.text()`方法。\n</code></pre></div><h3 id="📌-filter-one-displayed" tabindex="-1">📌 <code>filter_one.displayed()</code> <a class="header-anchor" href="#📌-filter-one-displayed" aria-label="Permalink to &quot;📌 `filter_one.displayed()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否显示为条件筛选元素，返回第一个结果。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配显示的元素，<code>False</code>匹配不显示的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>失败返回<code>NoneElement</code></td></tr><tr><td style="text-align:center;">抛出<code>ElementNotFoundError</code>异常</td><td><code>Settings.raise_when_ele_not_found</code>为<code>True</code>时抛出</td></tr></tbody></table><hr><h3 id="📌-filter-one-checked" tabindex="-1">📌 <code>filter_one.checked()</code> <a class="header-anchor" href="#📌-filter-one-checked" aria-label="Permalink to &quot;📌 `filter_one.checked()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否被选中为条件筛选元素，返回第一个结果。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配被选中的元素，<code>False</code>匹配不被选中的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>失败返回<code>NoneElement</code></td></tr><tr><td style="text-align:center;">抛出<code>ElementNotFoundError</code>异常</td><td><code>Settings.raise_when_ele_not_found</code>为<code>True</code>时抛出</td></tr></tbody></table><hr><h3 id="📌-filter-one-selected" tabindex="-1">📌 <code>filter_one.selected()</code> <a class="header-anchor" href="#📌-filter-one-selected" aria-label="Permalink to &quot;📌 `filter_one.selected()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否被选择为条件筛选元素，返回第一个结果。用于<code>&lt;select&gt;</code>元素项目。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配被选择的元素，<code>False</code>匹配不被选择的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>失败返回<code>NoneElement</code></td></tr><tr><td style="text-align:center;">抛出<code>ElementNotFoundError</code>异常</td><td><code>Settings.raise_when_ele_not_found</code>为<code>True</code>时抛出</td></tr></tbody></table><hr><h3 id="📌-filter-one-enabled" tabindex="-1">📌 <code>filter_one.enabled()</code> <a class="header-anchor" href="#📌-filter-one-enabled" aria-label="Permalink to &quot;📌 `filter_one.enabled()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否可用为条件筛选元素，返回第一个结果。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配可用的元素，<code>False</code>匹配 disabled 状态的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>失败返回<code>NoneElement</code></td></tr><tr><td style="text-align:center;">抛出<code>ElementNotFoundError</code>异常</td><td><code>Settings.raise_when_ele_not_found</code>为<code>True</code>时抛出</td></tr></tbody></table><hr><h3 id="📌-filter-one-clickable" tabindex="-1">📌 <code>filter_one.clickable()</code> <a class="header-anchor" href="#📌-filter-one-clickable" aria-label="Permalink to &quot;📌 `filter_one.clickable()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否可点击为条件筛选元素，返回第一个结果。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配可点击的元素，<code>False</code>表示匹配不是可点击的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>失败返回<code>NoneElement</code></td></tr><tr><td style="text-align:center;">抛出<code>ElementNotFoundError</code>异常</td><td><code>Settings.raise_when_ele_not_found</code>为<code>True</code>时抛出</td></tr></tbody></table><hr><h3 id="📌-filter-one-have-rect" tabindex="-1">📌 <code>filter_one.have_rect()</code> <a class="header-anchor" href="#📌-filter-one-have-rect" aria-label="Permalink to &quot;📌 `filter_one.have_rect()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否有大小为条件筛选元素，返回第一个结果。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配有大小的元素，<code>False</code>表示匹配没有大小的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>失败返回<code>NoneElement</code></td></tr><tr><td style="text-align:center;">抛出<code>ElementNotFoundError</code>异常</td><td><code>Settings.raise_when_ele_not_found</code>为<code>True</code>时抛出</td></tr></tbody></table><hr><h3 id="📌-filter-one-style" tabindex="-1">📌 <code>filter_one.style()</code> <a class="header-anchor" href="#📌-filter-one-style" aria-label="Permalink to &quot;📌 `filter_one.style()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否拥有某个 style 值为条件筛选元素，返回第一个结果。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性名称</td></tr><tr><td style="text-align:center;"><code>value</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性值</td></tr><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>表示匹配<code>name</code>值为<code>value</code>值的元素，<code>False</code>表示匹配<code>name</code>值不为<code>value</code>值的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>失败返回<code>NoneElement</code></td></tr><tr><td style="text-align:center;">抛出<code>ElementNotFoundError</code>异常</td><td><code>Settings.raise_when_ele_not_found</code>为<code>True</code>时抛出</td></tr></tbody></table><hr><h3 id="📌-filter-one-property" tabindex="-1">📌 <code>filter_one.property()</code> <a class="header-anchor" href="#📌-filter-one-property" aria-label="Permalink to &quot;📌 `filter_one.property()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否拥有某个 property 值为条件筛选元素，返回第一个结果。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性名称</td></tr><tr><td style="text-align:center;"><code>value</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性值</td></tr><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>表示匹配<code>name</code>值为<code>value</code>值的元素，<code>False</code>表示匹配<code>name</code>值不为<code>value</code>值的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>失败返回<code>NoneElement</code></td></tr><tr><td style="text-align:center;">抛出<code>ElementNotFoundError</code>异常</td><td><code>Settings.raise_when_ele_not_found</code>为<code>True</code>时抛出</td></tr></tbody></table><hr><h3 id="📌-filter-one-attr" tabindex="-1">📌 <code>filter_one.attr()</code> <a class="header-anchor" href="#📌-filter-one-attr" aria-label="Permalink to &quot;📌 `filter_one.attr()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否拥有某个 attribute 值为条件筛选元素，返回第一个结果。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性名称</td></tr><tr><td style="text-align:center;"><code>value</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性值</td></tr><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>表示匹配<code>name</code>值为<code>value</code>值的元素，<code>False</code>表示匹配<code>name</code>值不为<code>value</code>值的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>失败返回<code>NoneElement</code></td></tr><tr><td style="text-align:center;">抛出<code>ElementNotFoundError</code>异常</td><td><code>Settings.raise_when_ele_not_found</code>为<code>True</code>时抛出</td></tr></tbody></table><hr><h3 id="📌-filter-one-text" tabindex="-1">📌 <code>filter_one.text()</code> <a class="header-anchor" href="#📌-filter-one-text" aria-label="Permalink to &quot;📌 `filter_one.text()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否含有指定文本为条件筛选元素，返回第一个结果。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>text</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>用于匹配的文本</td></tr><tr><td style="text-align:center;"><code>fuzzy</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否模糊匹配</td></tr><tr><td style="text-align:center;"><code>contain</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否包含该字符串，<code>False</code>表示不包含</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>失败返回<code>NoneElement</code></td></tr><tr><td style="text-align:center;">抛出<code>ElementNotFoundError</code>异常</td><td><code>Settings.raise_when_ele_not_found</code>为<code>True</code>时抛出</td></tr></tbody></table><hr><h3 id="📌-filter-one-tag" tabindex="-1">📌 <code>filter_one.tag()</code> <a class="header-anchor" href="#📌-filter-one-tag" aria-label="Permalink to &quot;📌 `filter_one.tag()`&quot;">​</a></h3><p>此方法用于在元素列表中以某个类型为条件筛选元素，返回第一个结果。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>元素类型名称</td></tr><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>表示匹配该类型元素，<code>False</code>表示匹配非该类型元素</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td>失败返回<code>NoneElement</code></td></tr><tr><td style="text-align:center;">抛出<code>ElementNotFoundError</code>异常</td><td><code>Settings.raise_when_ele_not_found</code>为<code>True</code>时抛出</td></tr></tbody></table><hr><h3 id="📌-选择获取第几个" tabindex="-1">📌 选择获取第几个 <a class="header-anchor" href="#📌-选择获取第几个" aria-label="Permalink to &quot;📌 选择获取第几个&quot;">​</a></h3><p><code>filter_one</code>可加参数，以选择返回第几个结果。</p><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eles.filter_one(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).text(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;图&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取第二个文本带有“图”字的元素</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">说明</p><pre><code>`filter_one`在不加序号参数时，可不要后面的`()`。\n</code></pre></div><hr><h2 id="✅️️-获取全部匹配元素" tabindex="-1">✅️️ 获取全部匹配元素 <a class="header-anchor" href="#✅️️-获取全部匹配元素" aria-label="Permalink to &quot;✅️️ 获取全部匹配元素&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">说明</p><pre><code>静态元素列表只有`filter.attr()`和`filter.text()`方法。\n</code></pre></div><h3 id="📌-filter-displayed" tabindex="-1">📌 <code>filter.displayed()</code> <a class="header-anchor" href="#📌-filter-displayed" aria-label="Permalink to &quot;📌 `filter.displayed()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否显示为条件筛选元素，返回新的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配显示的元素，<code>False</code>匹配不显示的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td>元素对象组成的列表，可继续用于筛选</td></tr></tbody></table><hr><h3 id="📌-filter-checked" tabindex="-1">📌 <code>filter.checked()</code> <a class="header-anchor" href="#📌-filter-checked" aria-label="Permalink to &quot;📌 `filter.checked()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否被选中为条件筛选元素，返回新的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配被选中的元素，<code>False</code>匹配不被选中的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td>元素对象组成的列表，可继续用于筛选</td></tr></tbody></table><hr><h3 id="📌-filter-selected" tabindex="-1">📌 <code>filter.selected()</code> <a class="header-anchor" href="#📌-filter-selected" aria-label="Permalink to &quot;📌 `filter.selected()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否被选择为条件筛选元素，返回新的列表。用于<code>&lt;select&gt;</code>元素项目。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配被选择的元素，<code>False</code>匹配不被选择的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td>元素对象组成的列表，可继续用于筛选</td></tr></tbody></table><hr><h3 id="📌-filter-enabled" tabindex="-1">📌 <code>filter.enabled()</code> <a class="header-anchor" href="#📌-filter-enabled" aria-label="Permalink to &quot;📌 `filter.enabled()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否可用为条件筛选元素，返回新的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配可用的元素，<code>False</code>匹配 disabled 状态的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td>元素对象组成的列表，可继续用于筛选</td></tr></tbody></table><hr><h3 id="📌-filter-clickable" tabindex="-1">📌 <code>filter.clickable()</code> <a class="header-anchor" href="#📌-filter-clickable" aria-label="Permalink to &quot;📌 `filter.clickable()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否可点击为条件筛选元素，返回新的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配可点击的元素，<code>False</code>表示匹配不是可点击的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td>元素对象组成的列表，可继续用于筛选</td></tr></tbody></table><hr><h3 id="📌-filter-have-rect" tabindex="-1">📌 <code>filter.have_rect()</code> <a class="header-anchor" href="#📌-filter-have-rect" aria-label="Permalink to &quot;📌 `filter.have_rect()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否有大小为条件筛选元素，返回新的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否匹配有大小的元素，<code>False</code>表示匹配没有大小的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td>元素对象组成的列表，可继续用于筛选</td></tr></tbody></table><hr><h3 id="📌-filter-style" tabindex="-1">📌 <code>filter.style()</code> <a class="header-anchor" href="#📌-filter-style" aria-label="Permalink to &quot;📌 `filter.style()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否拥有某个 style 值为条件筛选元素，返回新的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性名称</td></tr><tr><td style="text-align:center;"><code>value</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性值</td></tr><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>表示匹配<code>name</code>值为<code>value</code>值的元素，<code>False</code>表示匹配<code>name</code>值不为<code>value</code>值的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td>元素对象组成的列表，可继续用于筛选</td></tr></tbody></table><hr><h3 id="📌-filter-property" tabindex="-1">📌 <code>filter.property()</code> <a class="header-anchor" href="#📌-filter-property" aria-label="Permalink to &quot;📌 `filter.property()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否拥有某个 property 值为条件筛选元素，返回新的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性名称</td></tr><tr><td style="text-align:center;"><code>value</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性值</td></tr><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>表示匹配<code>name</code>值为<code>value</code>值的元素，<code>False</code>表示匹配<code>name</code>值不为<code>value</code>值的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td>元素对象组成的列表，可继续用于筛选</td></tr></tbody></table><hr><h3 id="📌-filter-tag" tabindex="-1">📌 <code>filter.tag()</code> <a class="header-anchor" href="#📌-filter-tag" aria-label="Permalink to &quot;📌 `filter.tag()`&quot;">​</a></h3><p>此方法用于在元素列表中以某个类型为条件筛选元素，返回新的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>元素类型名称</td></tr><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>表示匹配该类型元素，<code>False</code>表示匹配非该类型元素</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td>元素对象组成的列表，可继续用于筛选</td></tr></tbody></table><hr><h3 id="📌-filter-attr" tabindex="-1">📌 <code>filter.attr()</code> <a class="header-anchor" href="#📌-filter-attr" aria-label="Permalink to &quot;📌 `filter.attr()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否拥有某个 attribute 值为条件筛选元素，返回新的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性名称</td></tr><tr><td style="text-align:center;"><code>value</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性值</td></tr><tr><td style="text-align:center;"><code>equal</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td><code>True</code>表示匹配<code>name</code>值为<code>value</code>值的元素，<code>False</code>表示匹配<code>name</code>值不为<code>value</code>值的</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td>元素对象组成的列表，可继续用于筛选</td></tr></tbody></table><hr><h3 id="📌-filter-text" tabindex="-1">📌 <code>filter.text()</code> <a class="header-anchor" href="#📌-filter-text" aria-label="Permalink to &quot;📌 `filter.text()`&quot;">​</a></h3><p>此方法用于在元素列表中以是否含有指定文本为条件筛选元素，返回新的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>text</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>用于匹配的文本</td></tr><tr><td style="text-align:center;"><code>fuzzy</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否模糊匹配</td></tr><tr><td style="text-align:center;"><code>contain</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>是否包含该字符串，<code>False</code>表示不包含</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td>元素对象组成的列表，可继续用于筛选</td></tr></tbody></table><hr><h2 id="✅️️-多条件筛选" tabindex="-1">✅️️ 多条件筛选 <a class="header-anchor" href="#✅️️-多条件筛选" aria-label="Permalink to &quot;✅️️ 多条件筛选&quot;">​</a></h2><h3 id="📌-与关系筛选" tabindex="-1">📌 与关系筛选 <a class="header-anchor" href="#📌-与关系筛选" aria-label="Permalink to &quot;📌 与关系筛选&quot;">​</a></h3><p>筛选支持链式操作，可串连多个条件，每个条件会筛选一层再进入下一层。</p><p>可实现多个条件的与关系筛选。</p><p><strong>示例，出导航栏中显示且含有“图”字的元素：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium().latest_tab</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://www.baidu.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#s-top-left&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).eles(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t:a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eles.filter.displayed().text(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;图&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ele.text, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39; &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-或关系筛选" tabindex="-1">📌 或关系筛选 <a class="header-anchor" href="#📌-或关系筛选" aria-label="Permalink to &quot;📌 或关系筛选&quot;">​</a></h3><p>元素列表的<code>search()</code>和<code>search_one()</code>方法可用于多个条件或筛选元素。</p><div class="info custom-block"><p class="custom-block-title">说明</p><pre><code>静态元素列表没有这种方法。\n</code></pre></div><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>index</code>（<code>search_one()</code>独有）</td><td style="text-align:center;"><code>int</code></td><td style="text-align:center;"><code>1</code></td><td>结果中的元素序号，<code>1</code>开始</td></tr><tr><td style="text-align:center;"><code>displayed</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>None</code></td><td>是否显示，<code>bool</code>表示匹配是或否，<code>None</code>为忽略该项</td></tr><tr><td style="text-align:center;"><code>checked</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>None</code></td><td>是否被选中，<code>bool</code>表示匹配是或否，<code>None</code>为忽略该项</td></tr><tr><td style="text-align:center;"><code>selected</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>None</code></td><td>是否被选择，<code>bool</code>表示匹配是或否，<code>None</code>为忽略该项</td></tr><tr><td style="text-align:center;"><code>enabled</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>None</code></td><td>是否可用，<code>bool</code>表示匹配是或否，<code>None</code>为忽略该项</td></tr><tr><td style="text-align:center;"><code>clickable</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>None</code></td><td>是否可点击，<code>bool</code>表示匹配是或否，<code>None</code>为忽略该项</td></tr><tr><td style="text-align:center;"><code>have_rect</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>None</code></td><td>是否拥有大小，<code>bool</code>表示匹配是或否，<code>None</code>为忽略该项</td></tr><tr><td style="text-align:center;"><code>have_text</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>None</code></td><td>是否含有文本，<code>bool</code>表示匹配是或否，<code>None</code>为忽略该项</td></tr><tr><td style="text-align:center;"><code>tag</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>指定标签页类型，<code>None</code>为忽略该项</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Filter</code></td><td><code>search()</code>返回元素对象组成的列表</td></tr><tr><td style="text-align:center;"><code>ChromiumElement</code></td><td><code>search_one()</code>匹配成功返回元素对象</td></tr><tr><td style="text-align:center;"><code>NoneElement</code></td><td><code>search_one()</code>匹配失败返回<code>NoneElement</code></td></tr></tbody></table><hr><h3 id="📌-混合筛选" tabindex="-1">📌 混合筛选 <a class="header-anchor" href="#📌-混合筛选" aria-label="Permalink to &quot;📌 混合筛选&quot;">​</a></h3><p>与关系和或关系可以用链式操作混合使用。</p><div class="info custom-block"><p class="custom-block-title">说明</p><p>静态元素列表没有这种方法。</p></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">es </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eles.search(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">displayed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).enabled()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eles.filter.enablde().search_one(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">displayed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h2 id="✅️️-获取筛选结果的属性集合" tabindex="-1">✅️️ 获取筛选结果的属性集合 <a class="header-anchor" href="#✅️️-获取筛选结果的属性集合" aria-label="Permalink to &quot;✅️️ 获取筛选结果的属性集合&quot;">​</a></h2><p>筛选结果列表可以调用<code>get()</code>方法获取指定属性结合。</p><p>该集合为遍历列表中所有元素获取的。</p><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium().latest_tab</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://www.baidu.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#s-top-left&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).eles(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t:a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eles.get.texts())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取所有元素的文本</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eles.filter.displayed().get.texts())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取的元素的文本</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;新闻&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hao123&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;地图&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;贴吧&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;视频&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;图片&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;网盘&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;文库&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;更多&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;翻译&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;学术&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;百科&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;知道&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;健康&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;营销推广&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;直播&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;音乐&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;橙篇&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;查看全部百度产品 &gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;新闻&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hao123&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;地图&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;贴吧&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;视频&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;图片&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;网盘&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;文库&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;更多&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="📌-get-attrs" tabindex="-1">📌 <code>get.attrs()</code> <a class="header-anchor" href="#📌-get-attrs" aria-label="Permalink to &quot;📌 `get.attrs()`&quot;">​</a></h3><p>此方法用于返回所有元素指定的 attribute 属性组成的列表。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;">必填</td><td>属性名称</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>List[str]</code></td><td>属性文本组成的列表</td></tr></tbody></table><hr><h3 id="📌-get-links" tabindex="-1">📌 <code>get.links()</code> <a class="header-anchor" href="#📌-get-links" aria-label="Permalink to &quot;📌 `get.links()`&quot;">​</a></h3><p>此方法用于返回所有元素的<code>link</code>属性组成的列表。</p><p><strong>参数：</strong> 无</p><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>List[str]</code></td><td>链接文本组成的列表</td></tr></tbody></table><hr><h3 id="📌-get-texts" tabindex="-1">📌 <code>get.texts()</code> <a class="header-anchor" href="#📌-get-texts" aria-label="Permalink to &quot;📌 `get.texts()`&quot;">​</a></h3><p>此方法用于返回所有元素的<code>text</code>属性组成的列表。</p><p><strong>参数：</strong> 无</p><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>List[str]</code></td><td>元素文本组成的列表</td></tr></tbody></table>',171)])])}const y=e(s,[["render",l]]);export{k as __pageData,y as default};
