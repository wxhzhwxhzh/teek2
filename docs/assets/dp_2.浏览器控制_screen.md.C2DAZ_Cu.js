import{_ as t,c as d,o as s,aM as a}from"./chunks/framework.CWgDeAH8.js";const g=JSON.parse('{"title":"🛰️ 截图和录像","description":"","frontmatter":{"id":"screen","title":"🛰️ 截图和录像"},"headers":[],"relativePath":"dp/2.浏览器控制/screen.md","filePath":"dp/2.浏览器控制/screen.md"}'),c={name:"dp/2.浏览器控制/screen.md"};function o(i,e,n,l,r,h){return s(),d("div",null,[...e[0]||(e[0]=[a('<h1 id="🛰️-截图和录像" tabindex="-1">🛰️ 截图和录像 <a class="header-anchor" href="#🛰️-截图和录像" aria-label="Permalink to &quot;🛰️ 截图和录像&quot;">​</a></h1><div class="wwads-cn wwads-horizontal" data-id="317"></div><br><h2 id="✅️️-页面截图" tabindex="-1">✅️️ 页面截图# <a class="header-anchor" href="#✅️️-页面截图" aria-label="Permalink to &quot;✅️️ 页面截图#&quot;">​</a></h2><p>使用页面对象的<code>get_screenshot()</code>方法对页面进行截图，可对整个网页、可见网页、指定范围截图。</p><p>对可视范围外截图需要 90 以上版本浏览器支持。</p><p>下面三个参数三选一，优先级：<code>as_bytes</code>&gt;<code>as_base64</code>&gt;<code>path</code>。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;"><code>None</code></td><td>保存图片的路径，为<code>None</code>时保存在当前文件夹</td></tr><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>完整文件名，后缀可选<code>&#39;jpg&#39;</code>、<code>&#39;jpeg&#39;</code>、<code>&#39;png&#39;</code>、<code>&#39;webp&#39;</code>，为<code>None</code>时以用 jpg 格式</td></tr><tr><td style="text-align:center;"><code>as_bytes</code></td><td style="text-align:center;"><code>str</code><br><code>True</code></td><td style="text-align:center;"><code>None</code></td><td>是否以字节形式返回图片，可选<code>&#39;jpg&#39;</code>、<code>&#39;jpeg&#39;</code>、<code>&#39;png&#39;</code>、<code>&#39;webp&#39;</code>、<code>None</code>、<code>True</code><br>不为<code>None</code>时<code>path</code>参数无效<br>为<code>True</code>时选用 jpg 格式</td></tr><tr><td style="text-align:center;"><code>as_base64</code></td><td style="text-align:center;"><code>str</code><br><code>True</code></td><td style="text-align:center;"><code>None</code></td><td>是否以 base64 形式返回图片，可选<code>&#39;jpg&#39;</code>、<code>&#39;jpeg&#39;</code>、<code>&#39;png&#39;</code>、<code>&#39;webp&#39;</code>、<code>None</code>、<code>True</code><br>不为<code>None</code>时<code>path</code>参数无效<br>为<code>True</code>时选用 jpg 格式</td></tr><tr><td style="text-align:center;"><code>full_page</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>False</code></td><td>是否整页截图，为<code>True</code>截取整个网页，为<code>False</code>截取可视窗口</td></tr><tr><td style="text-align:center;"><code>left_top</code></td><td style="text-align:center;"><code>Tuple[int, int]</code></td><td style="text-align:center;"><code>None</code></td><td>截取范围左上角坐标</td></tr><tr><td style="text-align:center;"><code>right_bottom</code></td><td style="text-align:center;"><code>Tuple[int, int]</code></td><td style="text-align:center;"><code>None</code></td><td>截取范围右下角坐标</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>bytes</code></td><td><code>as_bytes</code>生效时返回图片字节</td></tr><tr><td style="text-align:center;"><code>str</code></td><td><code>as_bytes</code>和<code>as_base64</code>为<code>None</code>时返回图片完整路径</td></tr><tr><td style="text-align:center;"><code>str</code></td><td><code>as_base64</code>生效时返回 base64 格式的字符串</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">说明</p><pre><code>如`path`为包含文件名的完整路径，`name`参数无效。\n</code></pre></div><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 对整页截图并保存</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.get_screenshot(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tmp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pic.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">full_page</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="️️-✅️️-元素截图" tabindex="-1">️️ ✅️️ 元素截图 <a class="header-anchor" href="#️️-✅️️-元素截图" aria-label="Permalink to &quot;️️ ✅️️ 元素截图&quot;">​</a></h2><p>使用元素对象的<code>get_screenshot()</code>方法对元素进行截图。</p><p>若元素范围超出视口，需 90 以上版本内核支持。</p><p>下面三个参数三选一，优先级：<code>as_bytes</code>&gt;<code>as_base64</code>&gt;<code>path</code>。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;"><code>None</code></td><td>保存图片的路径，为<code>None</code>时保存在当前文件夹</td></tr><tr><td style="text-align:center;"><code>name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>完整文件名，后缀可选<code>&#39;jpg&#39;</code>、<code>&#39;jpeg&#39;</code>、<code>&#39;png&#39;</code>、<code>&#39;webp&#39;</code>，为<code>None</code>时以用 jpg 格式</td></tr><tr><td style="text-align:center;"><code>as_bytes</code></td><td style="text-align:center;"><code>str</code><br><code>True</code></td><td style="text-align:center;"><code>None</code></td><td>是否以字节形式返回图片，可选<code>&#39;jpg&#39;</code>、<code>&#39;jpeg&#39;</code>、<code>&#39;png&#39;</code>、<code>&#39;webp&#39;</code>、<code>None</code>、<code>True</code><br>不为<code>None</code>时<code>path</code>和<code>as_base64</code>参数无效<br>为<code>True</code>时选用 jpg 格式</td></tr><tr><td style="text-align:center;"><code>as_base64</code></td><td style="text-align:center;"><code>str</code><br><code>True</code></td><td style="text-align:center;"><code>None</code></td><td>是否以 base64 形式返回图片，可选<code>&#39;jpg&#39;</code>、<code>&#39;jpeg&#39;</code>、<code>&#39;png&#39;</code>、<code>&#39;webp&#39;</code>、<code>None</code>、<code>True</code><br>不为<code>None</code>时<code>path</code>参数无效<br>为<code>True</code>时选用 jpg 格式</td></tr><tr><td style="text-align:center;"><code>scroll_to_center</code></td><td style="text-align:center;"><code>bool</code></td><td style="text-align:center;"><code>True</code></td><td>截图前是否滚动到视口中央</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>bytes</code></td><td><code>as_bytes</code>生效时返回图片字节</td></tr><tr><td style="text-align:center;"><code>str</code></td><td><code>as_bytes</code>和<code>as_base64</code>为<code>None</code>时返回图片完整路径</td></tr><tr><td style="text-align:center;"><code>str</code></td><td><code>as_base64</code>生效时返回 base64 格式的字符串</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">说明</p><pre><code>如`path`为包含文件名的完整路径，`name`参数无效。\n</code></pre></div><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">img </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tag:img&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">img.get_screenshot()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bytes_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> img.get_screenshot(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">as_bytes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 返回截图二进制文本</span></span></code></pre></div><hr><h2 id="✅️️-页面录像" tabindex="-1">✅️️ 页面录像 <a class="header-anchor" href="#✅️️-页面录像" aria-label="Permalink to &quot;✅️️ 页面录像&quot;">​</a></h2><p>使用页面对象的<code>screencast</code>功能，可以录取屏幕图片或视频。</p><h3 id="📌-设置录制模式" tabindex="-1">📌 设置录制模式 <a class="header-anchor" href="#📌-设置录制模式" aria-label="Permalink to &quot;📌 设置录制模式&quot;">​</a></h3><p>录制模式一共有 5 种，通过<code>screencast.set_mode.xxx_mode()</code>设置。</p><table tabindex="0"><thead><tr><th style="text-align:center;">模式</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>video_mode()</code></td><td>持续录制页面，停止时生成没有声音的视频</td></tr><tr><td style="text-align:center;"><code>frugal_video_mode()</code></td><td>页面有变化时才录制，停止时生成没有声音的视频</td></tr><tr><td style="text-align:center;"><code>js_video_mode()</code></td><td>可生成有声音的视频，但需要手动启动</td></tr><tr><td style="text-align:center;"><code>imgs_mode()</code></td><td>持续对页面进行截图</td></tr><tr><td style="text-align:center;"><code>frugal_imgs_mode()</code></td><td>页面有变化时才保存页面图像</td></tr></tbody></table><h3 id="📌-设置存放路径" tabindex="-1">📌 设置存放路径 <a class="header-anchor" href="#📌-设置存放路径" aria-label="Permalink to &quot;📌 设置存放路径&quot;">​</a></h3><p>使用<code>screencast.set_save_path()</code>设置录制结果保存路径。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>save_path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;"><code>None</code></td><td>保存图片或视频的路径</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><h3 id="📌-screencast-start" tabindex="-1">📌 <code>screencast.start()</code> <a class="header-anchor" href="#📌-screencast-start" aria-label="Permalink to &quot;📌 `screencast.start()`&quot;">​</a></h3><p>此方法用于开始录制浏览器窗口。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>save_path</code></td><td style="text-align:center;"><code>str</code><br><code>Path</code></td><td style="text-align:center;"><code>None</code></td><td>保存图片或视频的路径</td></tr></tbody></table><p><strong>返回：</strong><code>None</code></p><div class="warning custom-block"><p class="custom-block-title">注意</p><pre><code>保存路径必需设置，无论是用`screencast.set()`还是`screencast.start()`都可以。\n</code></pre></div><h3 id="📌-screencast-stop" tabindex="-1">📌 <code>screencast.stop()</code> <a class="header-anchor" href="#📌-screencast-stop" aria-label="Permalink to &quot;📌 `screencast.stop()`&quot;">​</a></h3><p>此方法用于停止录取屏幕。</p><table tabindex="0"><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>video_name</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>视频文件名，为<code>None</code>时以当前时间名命</td></tr><tr><td style="text-align:center;"><code>suffix</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>&#39;mp4&#39;</code></td><td>视频文件后缀</td></tr><tr><td style="text-align:center;"><code>coding</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>&#39;mp4v&#39;</code></td><td>视频编码格式，仅<code>video_mode</code>模式有效，根据<code>cv2.VideoWriter_fourcc()</code>定义</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">返回类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>str</code></td><td>保存为视频时返回视频文件路径，否则返回保存图片的文件夹路径</td></tr></tbody></table><h3 id="📌-注意事项" tabindex="-1">📌 注意事项 <a class="header-anchor" href="#📌-注意事项" aria-label="Permalink to &quot;📌 注意事项&quot;">​</a></h3><ul><li>使用<code>video_mode</code>和<code>frugal_video_mode</code>时，保存路径和保存文件名必需是英文。</li><li>使用<code>video_mode</code>和<code>frugal_video_mode</code>时，需先安装 opencv 库。<code>pip install opencv-python</code></li><li>使用<code>js_video_mode</code>时，需用鼠标手动选择要录制的目标，才能开始录制</li><li>使用<code>js_video_mode</code>时，如要对一个窗口进行录制，需在另一个窗口开始录制，否则如窗口出现跳转，会使录制失效</li></ul><h3 id="📌-示例" tabindex="-1">📌 示例 <a class="header-anchor" href="#📌-示例" aria-label="Permalink to &quot;📌 示例&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium().latest_tab</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.screencast.set_save_path(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;video&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置视频存放路径</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.screencast.set_mode.video_mode()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置录制</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.screencast.start()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开始录制</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.wait(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.screencast.stop()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 停止录制</span></span></code></pre></div>',44)])])}const y=t(c,[["render",o]]);export{g as __pageData,y as default};
