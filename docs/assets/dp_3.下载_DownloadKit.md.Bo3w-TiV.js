import{_ as i,c as a,o as n,aN as l}from"./chunks/framework.0ZSa6Wd7.js";const g=JSON.parse('{"title":"⤵️ download方法","description":"","frontmatter":{"id":"DownloadKit","title":"⤵️ download方法"},"headers":[],"relativePath":"dp/3.下载/DownloadKit.md","filePath":"dp/3.下载/DownloadKit.md"}'),p={name:"dp/3.下载/DownloadKit.md"};function t(e,s,h,d,k,o){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="⤵️-download方法" tabindex="-1">⤵️ download方法 <a class="header-anchor" href="#⤵️-download方法" aria-label="Permalink to &quot;⤵️ download方法&quot;">​</a></h1><div class="wwads-cn wwads-horizontal" data-id="317"></div><br><p>DrissionPage 每种页面对象都内置一个下载工具，提供任务管理、多线程并发、大文件分块、自动重连、文件名冲突处理等功能。</p><p>该工具现已独立打包成一个库，名为 DownloadKit，详细介绍见：<a href="http://drissionpage.cn/DownloadKitDocs" target="_blank" rel="noreferrer">DownloadKit</a>。</p><p>这里只介绍其主要功能，具体使用和设置方法请移步该文档。</p><h2 id="✅️️-功能简介" tabindex="-1">✅️️ 功能简介 <a class="header-anchor" href="#✅️️-功能简介" aria-label="Permalink to &quot;✅️️ 功能简介&quot;">​</a></h2><h3 id="📌-支持该工具的对象" tabindex="-1">📌 支持该工具的对象 <a class="header-anchor" href="#📌-支持该工具的对象" aria-label="Permalink to &quot;📌 支持该工具的对象&quot;">​</a></h3><p>以下对象均支持</p><ul><li><code>SessionPage</code></li><li><code>ChromiumTab</code></li><li><code>MixTab</code></li><li><code>ChromiumFrame</code></li><li><code>ChromiumPage</code></li><li><code>WebPage</code></li></ul><hr><h3 id="📌-下载器功能" tabindex="-1">📌 下载器功能 <a class="header-anchor" href="#📌-下载器功能" aria-label="Permalink to &quot;📌 下载器功能&quot;">​</a></h3><ul><li>可下载指定 url 文件</li><li>支持多线程并发下载多个文件</li><li>大文件自动分块使用多线程下载</li><li>可对现有文件追加数据</li><li>自动创建目标路径</li><li>下载时支持文件重命名</li><li>自动处理文件名冲突</li><li>自动去除路径和文件名中非法字符</li><li>支持 post 方式</li><li>支持自定义连接参数</li><li>任务失败自动重试</li></ul><div class="warning custom-block"><p class="custom-block-title">注意</p><pre><code>\`DownloadKit\`是对 requests 封装实现的，不是调用浏览器功能。
如果下载目标对 headers、data 等有要求，必需手动添加。
</code></pre></div><hr><h2 id="✅️️-添加任务" tabindex="-1">✅️️ 添加任务 <a class="header-anchor" href="#✅️️-添加任务" aria-label="Permalink to &quot;✅️️ 添加任务&quot;">​</a></h2><h3 id="📌-单线程任务" tabindex="-1">📌 单线程任务 <a class="header-anchor" href="#📌-单线程任务" aria-label="Permalink to &quot;📌 单线程任务&quot;">​</a></h3><p>使用<code>download()</code>方法可添加单线程任务，该方法是阻塞式的，且只使用一个线程。</p><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionPage</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionPage()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://www.baidu.com/img/flexible/logo/pc/result.png&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">ownload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.download(url, save_path)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res)</span></span></code></pre></div><p>显示：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">url：https://www.baidu.com/img/flexible/logo/pc/result.png</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">文件名：result.png</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">目标路径：C:\\download</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">100%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 下载完成</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ownload</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">esult.png</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;success&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;C:\\\\download\\\\result.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="📌-并发任务" tabindex="-1">📌 并发任务 <a class="header-anchor" href="#📌-并发任务" aria-label="Permalink to &quot;📌 并发任务&quot;">​</a></h3><p>使用<code>download.add()</code>添加并发任务。</p><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://dldir1.qq.com/qqfile/qq/TIM3.4.8/TIM3.4.8.22092.exe&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://dldir1.qq.com/qqfile/qq/PCQQ9.7.16/QQ9.7.16.29187.exe&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;files&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionPage()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download.add(url1, save_path)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download.add(url2, save_path)</span></span></code></pre></div><hr><h3 id="📌-文件分块并行下载" tabindex="-1">📌 文件分块并行下载 <a class="header-anchor" href="#📌-文件分块并行下载" aria-label="Permalink to &quot;📌 文件分块并行下载&quot;">​</a></h3><p>使用<code>download.add()</code>方法的<code>split</code>参数可设置大文件是否分块下载。</p><p>使用<code>download.set.block_size()</code>方法可设置分块大小。</p><p>默认情况下载，超过 50M 的文件会自动分块下载。</p><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionPage()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download.set.block_size(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;30m&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置分块大小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://****/demo.zip&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认分块下载</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://****/demo.zip&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">split</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不使用分块下载</span></span></code></pre></div><hr><h3 id="📌-阻塞式多线程任务" tabindex="-1">📌 阻塞式多线程任务 <a class="header-anchor" href="#📌-阻塞式多线程任务" aria-label="Permalink to &quot;📌 阻塞式多线程任务&quot;">​</a></h3><p>使用并行分块下载时，也可以使任务逐个下载，在<code>add()</code>后使用<code>wait()</code>即可。</p><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionPage()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://****/demo.zip&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).wait()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://****/demo.zip&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).wait()</span></span></code></pre></div><hr><h3 id="📌-详细使用文档" tabindex="-1">📌 详细使用文档 <a class="header-anchor" href="#📌-详细使用文档" aria-label="Permalink to &quot;📌 详细使用文档&quot;">​</a></h3><p>以上仅是普通示例，详细功能请查阅：<a href="http://drissionpage.cn/DownloadKitDocs/usage/add_missions/" target="_blank" rel="noreferrer">DownloadKit 添加任务</a></p><hr><h2 id="✅️️-下载设置" tabindex="-1">✅️️ 下载设置 <a class="header-anchor" href="#✅️️-下载设置" aria-label="Permalink to &quot;✅️️ 下载设置&quot;">​</a></h2><h3 id="📌-全局设置" tabindex="-1">📌 全局设置 <a class="header-anchor" href="#📌-全局设置" aria-label="Permalink to &quot;📌 全局设置&quot;">​</a></h3><p>使用<code>download.set.****()</code>方法，可对默认下载行为进行设置。</p><p>包括以下设置：</p><ul><li>保存路径</li><li>允许使用的线程总数</li><li>是否启用分块下载</li><li>分块大小</li><li>连接失败重试次数</li><li>重试间隔</li><li>连接超时时间</li><li>文件名冲突时的处理方式</li><li>日志和显示相关设置</li></ul><hr><h3 id="📌-每个任务单独设置" tabindex="-1">📌 每个任务单独设置 <a class="header-anchor" href="#📌-每个任务单独设置" aria-label="Permalink to &quot;📌 每个任务单独设置&quot;">​</a></h3><p>新建任务时，<code>download()</code>和<code>add()</code>方法的参数可对当前任务进行参数设置，覆盖全局设置。</p><p>详见上文添加参数的文档。</p><hr><h3 id="📌-详细使用文档-1" tabindex="-1">📌 详细使用文档 <a class="header-anchor" href="#📌-详细使用文档-1" aria-label="Permalink to &quot;📌 详细使用文档&quot;">​</a></h3><p>详细设置功能请查阅：<a href="http://drissionpage.cn/DownloadKitDocs/usage/settings/" target="_blank" rel="noreferrer">DownloadKit 运行设置</a></p><hr><h2 id="✅️️-任务管理" tabindex="-1">✅️️ 任务管理 <a class="header-anchor" href="#✅️️-任务管理" aria-label="Permalink to &quot;✅️️ 任务管理&quot;">​</a></h2><h3 id="📌-任务对象" tabindex="-1">📌 任务对象 <a class="header-anchor" href="#📌-任务对象" aria-label="Permalink to &quot;📌 任务对象&quot;">​</a></h3><p>对象<code>Mission</code>用于管理任务，有以下功能：</p><ul><li>查看任务状态、信息、进度</li><li>保存任务参数，如 url、连接参数等</li><li>取消进行中的任务</li><li>删除已下载的文件</li></ul><hr><h3 id="📌-获取单个任务对象" tabindex="-1">📌 获取单个任务对象 <a class="header-anchor" href="#📌-获取单个任务对象" aria-label="Permalink to &quot;📌 获取单个任务对象&quot;">​</a></h3><p>使用<code>download.add()</code>添加任务时，会返回一个任务对象。</p><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mission </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.download.add(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://****.pdf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mission.id)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取任务id</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mission.rate)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印下载进度（百分比）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mission.state)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印任务状态</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mission.info)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印任务信息</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mission.result)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印任务结果</span></span></code></pre></div><p>除添加任务时获取对象，也可以使用<code>download.get_mission()</code>获取。在上一个示例中可以看到，任务对象有<code>id</code>属性，把任务的<code>id</code>传入此方法，会返回该任务对象。</p><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mission_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mission.id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mission </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.download.get_mission(mission_id)</span></span></code></pre></div><hr><h3 id="📌-获取全部任务对象" tabindex="-1">📌 获取全部任务对象 <a class="header-anchor" href="#📌-获取全部任务对象" aria-label="Permalink to &quot;📌 获取全部任务对象&quot;">​</a></h3><p>使用页面对象的<code>download.missions</code>属性，可以获取所有下载任务。该属性返回一个<code>dict</code>，保存了所有下载任务。以任务对象的<code>id</code>为 key。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download_set.save_path(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">ownload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://****/****1.pdf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://****/****1.pdf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.download.missions)</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    1: &lt;Mission 1 D:\\download\\xxx1.pdf xxx1.pdf&gt;</span></span>
<span class="line"><span>    2: &lt;Mission 2 D:\\download\\xxx1_1.pdf xxx1_1.pdf&gt;</span></span>
<span class="line"><span>    ...</span></span>
<span class="line"><span>}</span></span></code></pre></div><hr><h3 id="📌-获取下载失败的任务" tabindex="-1">📌 获取下载失败的任务 <a class="header-anchor" href="#📌-获取下载失败的任务" aria-label="Permalink to &quot;📌 获取下载失败的任务&quot;">​</a></h3><p>使用<code>download.get_failed_missions()</code>方法，可以获取下载失败的任务列表。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download_set.save_path(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">ownload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://****/****1.pdf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://****/****1.pdf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.download.get_failed_missions()</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[</span></span>
<span class="line"><span>    &lt;Mission 1 状态码：404 None&gt;,</span></span>
<span class="line"><span>    &lt;Mission 2 状态码：404 None&gt;</span></span>
<span class="line"><span>    ...</span></span>
<span class="line"><span>]</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Tips</p><pre><code>获取失败任务对象后，可从其\`data\`属性读取任务内容，以便记录日志或择机重试。
</code></pre></div><hr><h3 id="📌-详细使用文档-2" tabindex="-1">📌 详细使用文档 <a class="header-anchor" href="#📌-详细使用文档-2" aria-label="Permalink to &quot;📌 详细使用文档&quot;">​</a></h3><p>详细设置功能请查阅：<a href="http://drissionpage.cn/DownloadKitDocs/usage/misssions/" target="_blank" rel="noreferrer">DownloadKit 任务管理</a></p>`,84)])])}const c=i(p,[["render",t]]);export{g as __pageData,c as default};
