import{_ as t,c as s,o as a,aM as i}from"./chunks/framework.CWgDeAH8.js";const g=JSON.parse('{"title":"🛰️ Page 对象","description":"","frontmatter":{"id":"pages","title":"🛰️ Page 对象"},"headers":[],"relativePath":"dp/2.浏览器控制/pages.md","filePath":"dp/2.浏览器控制/pages.md"}'),d={name:"dp/2.浏览器控制/pages.md"};function n(o,e,c,l,p,h){return a(),s("div",null,[...e[0]||(e[0]=[i(`<h1 id="🛰️-page-对象" tabindex="-1">🛰️ Page 对象 <a class="header-anchor" href="#🛰️-page-对象" aria-label="Permalink to &quot;🛰️ Page 对象&quot;">​</a></h1><div class="wwads-cn wwads-horizontal" data-id="317"></div><br><p><code>ChromiumPage</code>和<code>WebPage</code>是 4.1 之前用于连接和控制浏览器的对象。</p><p>4.1 这些功能由<code>Chromium</code>实现，但<code>ChromiumPage</code>和<code>WebPage</code>仍能正常使用。</p><p>对比<code>Chromium</code>，<code>ChromiumPage</code>和<code>WebPage</code>在连接浏览器时可以少写一行代码，但在多标签页操作的时候容易造成混乱。</p><p>更详细的用法可以看旧版文档。</p><h2 id="✅️️-chromiumpage" tabindex="-1">✅️️ <code>ChromiumPage</code> <a class="header-anchor" href="#✅️️-chromiumpage" aria-label="Permalink to &quot;✅️️ \`ChromiumPage\`&quot;">​</a></h2><p><code>ChromiumPage</code>把浏览器管理功能和一个标签页（默认接管时激活那个）控制功能整合在一起。</p><p>可看作浏览器对象，但同时控制了一个标签页。</p><p>如果项目只需要使用单标签页，用<code>ChromiumPage</code>会比较方便。</p><p><code>ChromiumPage</code>创建的标签页对象为<code>ChromiumTab</code>，没有切换模式功能。</p><table tabindex="0"><thead><tr><th style="text-align:center;">初始化参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>addr_or_opts</code></td><td style="text-align:center;"><code>str</code><br><code>int</code><br><code>ChromiumOptions</code><br></td><td style="text-align:center;"><code>None</code></td><td>浏览器启动配置或接管信息。<br>传入 &#39;ip: port&#39; 字符串、端口数字或<code>ChromiumOptions</code>对象时按配置启动或接管浏览器；<br>为<code>None</code>时使用配置文件配置启动浏览器</td></tr><tr><td style="text-align:center;"><code>tab_id</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>None</code></td><td>要控制的标签页 id，不指定默认为激活的</td></tr></tbody></table><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumPage</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumPage()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://DrissionPage.cn&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.title)</span></span></code></pre></div><hr><h2 id="✅️️-webpage" tabindex="-1">✅️️ <code>WebPage</code> <a class="header-anchor" href="#✅️️-webpage" aria-label="Permalink to &quot;✅️️ \`WebPage\`&quot;">​</a></h2><p><code>WebPage</code>覆盖了<code>ChromiumPage</code>所有功能，并且增加了切换模式功能，创建的标签页对象为<code>MixTab</code>。</p><table tabindex="0"><thead><tr><th style="text-align:center;">初始化参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>mode</code></td><td style="text-align:center;"><code>str</code></td><td style="text-align:center;"><code>&#39;d&#39;</code></td><td>运行模式，可选<code>&#39;d&#39;</code>或<code>&#39;s&#39;</code></td></tr><tr><td style="text-align:center;"><code>chromium_options</code></td><td style="text-align:center;"><code>bool</code><br><code>ChromiumOptions</code><br></td><td style="text-align:center;"><code>None</code></td><td><code>ChromiumOptions</code>对象，传入<code>None</code>时从默认 ini 文件读取，传入<code>False</code>时不读取 ini 文件，使用默认配置</td></tr><tr><td style="text-align:center;"><code>session_or_options</code></td><td style="text-align:center;"><code>SessionOptions</code><br><code>None</code><br><code>False</code></td><td style="text-align:center;"><code>None</code></td><td><code>Session</code>对象或<code>SessionOptions</code>对象，传入<code>None</code>时从默认 ini 文件读取，传入<code>False</code>时不读取 ini 文件，使用默认配置</td></tr></tbody></table><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebPage</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebPage()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://DrissionPage.cn&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.title)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.change_mode()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.title)</span></span></code></pre></div>`,19)])])}const k=t(d,[["render",n]]);export{g as __pageData,k as default};
