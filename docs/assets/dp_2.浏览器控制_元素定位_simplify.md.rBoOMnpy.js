import{_ as t,c as i,o as a,aM as e}from"./chunks/framework.CWgDeAH8.js";const o=JSON.parse('{"title":"🔦 简化写法","description":"","frontmatter":{"id":"simplify","title":"🔦 简化写法"},"headers":[],"relativePath":"dp/2.浏览器控制/元素定位/simplify.md","filePath":"dp/2.浏览器控制/元素定位/simplify.md"}'),n={name:"dp/2.浏览器控制/元素定位/simplify.md"};function l(h,s,d,p,k,r){return a(),i("div",null,[...s[0]||(s[0]=[e(`<h1 id="🔦-简化写法" tabindex="-1">🔦 简化写法 <a class="header-anchor" href="#🔦-简化写法" aria-label="Permalink to &quot;🔦 简化写法&quot;">​</a></h1><div class="wwads-cn wwads-horizontal" data-id="317"></div><br><p>为进一步精简代码，定位语法都可以用简化形式来表示，使语句更短，链式操作时更清晰。</p><h2 id="✅️-定位符语法简化" tabindex="-1">✅️ 定位符语法简化 <a class="header-anchor" href="#✅️-定位符语法简化" aria-label="Permalink to &quot;✅️ 定位符语法简化&quot;">​</a></h2><ul><li>定位语法都有其简化形式</li><li>页面和元素对象都实现了<code>__call__()</code>方法，所以<code>page.ele(&#39;****&#39;)</code>可简化为<code>page(&#39;****&#39;)</code></li><li>查找方法都支持链式操作</li></ul><p>示例：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查找tag为div的元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab.ele(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tag:div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 原写法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t:div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 简化写法</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用xpath查找元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab.ele(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xpath://****&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 原写法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x://****&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 简化写法</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查找text为&#39;something&#39;的元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab.ele(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;text=something&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 原写法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tx=something&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 简化写法</span></span></code></pre></div><p>简化写法对应列表</p><table tabindex="0"><thead><tr><th style="text-align:center;">原写法</th><th style="text-align:center;">简化写法</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>@id</code></td><td style="text-align:center;"><code>#</code></td><td style="text-align:center;">表示 id 属性，简化写法只在语句最前面且单独使用时生效</td></tr><tr><td style="text-align:center;"><code>@class</code></td><td style="text-align:center;"><code>.</code></td><td style="text-align:center;">表示 class 属性，简化写法只在语句最前面且单独使用时生效</td></tr><tr><td style="text-align:center;"><code>text</code></td><td style="text-align:center;"><code>tx</code></td><td style="text-align:center;">按文本匹配</td></tr><tr><td style="text-align:center;"><code>@text()</code></td><td style="text-align:center;"><code>@tx()</code></td><td style="text-align:center;">按文本查找，与 @ 或 @@ 配合使用时</td></tr><tr><td style="text-align:center;"><code>tag</code></td><td style="text-align:center;"><code>t</code></td><td style="text-align:center;">按标签类型匹配</td></tr><tr><td style="text-align:center;"><code>@tag()</code></td><td style="text-align:center;"><code>@t()</code></td><td style="text-align:center;">按元素名查找，与 @ 或 @@ 配合使用时</td></tr><tr><td style="text-align:center;"><code>xpath</code></td><td style="text-align:center;"><code>x</code></td><td style="text-align:center;">用 xpath 方式查找元素</td></tr><tr><td style="text-align:center;"><code>css</code></td><td style="text-align:center;"><code>c</code></td><td style="text-align:center;">用 css selector 方式查找元素</td></tr></tbody></table><hr><h2 id="✅️-shadow-root-简化" tabindex="-1">✅️ shadow root 简化 <a class="header-anchor" href="#✅️-shadow-root-简化" aria-label="Permalink to &quot;✅️ shadow root 简化&quot;">​</a></h2><p>一般获取元素的 shadow root 元素，用<code>ele.shadow_root</code>属性。</p><p>由于此属性经常用于大量链式操作，名字太长影响可读性，因此可简化为<code>ele.sr</code></p><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">txt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele.sr(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t:div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).text</span></span></code></pre></div><hr><h2 id="✅️-相对定位参数简化" tabindex="-1">✅️ 相对定位参数简化 <a class="header-anchor" href="#✅️-相对定位参数简化" aria-label="Permalink to &quot;✅️ 相对定位参数简化&quot;">​</a></h2><p>相对定位时，有时需要获取当前元素后某个元素，而不关心该元素是什么类型，一般是这样写：<code>ele.next(index=2)</code>。</p><p>但有一种简化的写法，可以直接写作<code>ele.next(2)</code>。</p><p>当第一个参数<code>filter_loc</code>接收数字时，会自动将其视作序号，替代<code>index</code>参数。因此书写可以稍微精简一些。</p><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.parent(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.next(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tx=****&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ele2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ele1.before(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如此类推</span></span></code></pre></div>`,23)])])}const E=t(n,[["render",l]]);export{o as __pageData,E as default};
