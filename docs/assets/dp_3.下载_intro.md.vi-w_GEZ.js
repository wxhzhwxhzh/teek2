import{_ as i,c as a,o as n,aM as t}from"./chunks/framework.Fs4ucY6U.js";const o=JSON.parse('{"title":"⤵️ 概述","description":"","frontmatter":{"id":"intro","title":"⤵️ 概述"},"headers":[],"relativePath":"dp/3.下载/intro.md","filePath":"dp/3.下载/intro.md"}'),l={name:"dp/3.下载/intro.md"};function p(h,s,e,k,d,r){return n(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="⤵️-概述" tabindex="-1">⤵️ 概述 <a class="header-anchor" href="#⤵️-概述" aria-label="Permalink to &quot;⤵️ 概述&quot;">​</a></h1><div class="wwads-cn wwads-horizontal" data-id="317"></div><br><p>DrissionPage 提供了强大的文件下载管理功能。</p><p>能够主动发起下载任务，也能够对浏览器触发的下载任务进行管理。</p><h2 id="✅️️-download-方法" tabindex="-1">✅️️ <code>download()</code>方法 <a class="header-anchor" href="#✅️️-download-方法" aria-label="Permalink to &quot;✅️️ \`download()\`方法&quot;">​</a></h2><p>该方法可以主动发起下载任务，提供任务管理、多线程、大文件分块、自动重连、文件名冲突处理等功能。</p><p>页面对象、<code>&lt;iframe&gt;</code>元素对象均支持此方法。</p><p>此方法是封装 requests 实现的，下载时会自动同步 cookies。</p><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionPage</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionPage()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.download(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://dldir1.qq.com/qqfile/qq/TIM3.4.8/TIM3.4.8.22092.exe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h2 id="✅️️-浏览器的下载任务" tabindex="-1">✅️️ 浏览器的下载任务 <a class="header-anchor" href="#✅️️-浏览器的下载任务" aria-label="Permalink to &quot;✅️️ 浏览器的下载任务&quot;">​</a></h2><p>浏览器页面对象、<code>&lt;iframe&gt;</code>对象可对浏览器下载任务进行控制。</p><p>包含以下功能：</p><ul><li>每个标签页对象可独立指定下载地址</li><li>可在下载前指定重命名文件名</li><li>可拦截下载任务，获取任务信息</li></ul><p><strong>示例：</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium().latest_tab</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mission </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tab(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t:a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).click.to_download(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tmp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;file_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 点击一个会触发下载的链接，同时设置下载路径和文件名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mission.wait()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 等待下载结束</span></span></code></pre></div><p>功能分解写法，效果和上面的一样：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Chromium().latest_tab</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.set.download_path(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;save_path&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置文件保存路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.set.download_file_name(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;file_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置重命名文件名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;t:a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).click()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 点击一个会触发下载的链接</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.wait.download_begin()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 等待下载开始</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tab.wait.downloads_done()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 等待下载结束</span></span></code></pre></div>`,20)])])}const g=i(l,[["render",p]]);export{o as __pageData,g as default};
