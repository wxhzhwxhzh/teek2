import{_ as i,c as a,o as t,aN as n}from"./chunks/framework.0ZSa6Wd7.js";const E=JSON.parse('{"title":"playwright 入门教程2","description":"","frontmatter":{"id":"intro2","permalink":"/pw/intro2","title":"playwright 入门教程2"},"headers":[],"relativePath":"pw/2.md","filePath":"pw/2.md"}'),h={name:"pw/2.md"};function l(e,s,p,k,o,d){return t(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="playwright-入门教程-使用-python-自动化浏览器操作" tabindex="-1">Playwright 入门教程：使用 Python 自动化浏览器操作 <a class="header-anchor" href="#playwright-入门教程-使用-python-自动化浏览器操作" aria-label="Permalink to &quot;Playwright 入门教程：使用 Python 自动化浏览器操作&quot;">​</a></h1><blockquote><p><strong>Playwright</strong> 是由 Microsoft 开发的现代化浏览器自动化工具，支持 Chromium、Firefox 和 WebKit 三大浏览器引擎。它具备速度快、功能强大、跨平台、支持无头/有头模式、自动等待、网络拦截、截图录屏等特性，是 Web 自动化测试、爬虫、端到端测试的理想选择。</p></blockquote><p>本教程将带你从零开始掌握 Playwright 的基本用法。</p><hr><h2 id="_1-安装-playwright" tabindex="-1">1. 安装 Playwright <a class="header-anchor" href="#_1-安装-playwright" aria-label="Permalink to &quot;1. 安装 Playwright&quot;">​</a></h2><h3 id="安装-python-包" tabindex="-1">安装 Python 包 <a class="header-anchor" href="#安装-python-包" aria-label="Permalink to &quot;安装 Python 包&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> playwright</span></span></code></pre></div><h3 id="安装浏览器驱动" tabindex="-1">安装浏览器驱动 <a class="header-anchor" href="#安装浏览器驱动" aria-label="Permalink to &quot;安装浏览器驱动&quot;">​</a></h3><p>Playwright 需要下载对应的浏览器二进制文件（Chromium、Firefox、WebKit）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><blockquote><p>如果你只需要特定浏览器（如仅 Chromium），可以运行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">playwright</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chromium</span></span></code></pre></div></blockquote><blockquote><p><strong>注意</strong>：首次运行 <code>playwright install</code> 可能需要几分钟，因为它会下载多个浏览器。</p></blockquote><hr><h2 id="_2-第一个-playwright-脚本" tabindex="-1">2. 第一个 Playwright 脚本 <a class="header-anchor" href="#_2-第一个-playwright-脚本" aria-label="Permalink to &quot;2. 第一个 Playwright 脚本&quot;">​</a></h2><p>创建一个名为 <code>first_script.py</code> 的文件：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> playwright.sync_api </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sync_playwright</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sync_playwright() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    browser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p.chromium.launch(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">headless</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动 Chromium，有头模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.new_page()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    page.goto(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.title())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    page.screenshot(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    browser.close()</span></span></code></pre></div><p>运行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> first_script.py</span></span></code></pre></div><p>你会看到浏览器窗口打开，访问 <code>example.com</code>，打印页面标题，并保存截图。</p><hr><h2 id="_3-启动浏览器与页面" tabindex="-1">3. 启动浏览器与页面 <a class="header-anchor" href="#_3-启动浏览器与页面" aria-label="Permalink to &quot;3. 启动浏览器与页面&quot;">​</a></h2><h3 id="启动选项" tabindex="-1">启动选项 <a class="header-anchor" href="#启动选项" aria-label="Permalink to &quot;启动选项&quot;">​</a></h3><ul><li><code>headless=True</code>（默认）：无头模式（后台运行）</li><li><code>headless=False</code>：有头模式（可见浏览器）</li><li><code>slow_mo=100</code>：每步操作延迟 100ms，便于调试</li><li><code>devtools=True</code>：自动打开开发者工具</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">browser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p.chromium.launch(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    headless</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    slow_mo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    devtools</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="创建新页面" tabindex="-1">创建新页面 <a class="header-anchor" href="#创建新页面" aria-label="Permalink to &quot;创建新页面&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.new_page()</span></span></code></pre></div><h3 id="访问-url" tabindex="-1">访问 URL <a class="header-anchor" href="#访问-url" aria-label="Permalink to &quot;访问 URL&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.goto(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.baidu.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><blockquote><p><code>goto()</code> 会自动等待页面加载完成（包括网络空闲状态）。</p></blockquote><hr><h2 id="_4-定位元素" tabindex="-1">4. 定位元素 <a class="header-anchor" href="#_4-定位元素" aria-label="Permalink to &quot;4. 定位元素&quot;">​</a></h2><p>Playwright 支持多种定位策略：</p><table tabindex="0"><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><code>page.locator(&quot;text=登录&quot;)</code></td><td>按文本定位</td></tr><tr><td><code>page.locator(&quot;#username&quot;)</code></td><td>CSS 选择器</td></tr><tr><td><code>page.locator(&quot;input[name=&#39;email&#39;]&quot;)</code></td><td>CSS 选择器</td></tr><tr><td><code>page.locator(&quot;xpath=//button[@id=&#39;submit&#39;]&quot;)</code></td><td>XPath（不推荐，优先用 CSS 或文本）</td></tr><tr><td><code>page.get_by_role(&quot;button&quot;, name=&quot;Submit&quot;)</code></td><td>按 ARIA 角色和名称（推荐）</td></tr><tr><td><code>page.get_by_label(&quot;Username&quot;)</code></td><td>按 label 关联的输入框</td></tr></tbody></table><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过文本点击按钮</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text=立即登录&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).click()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过 CSS 输入文本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#kw&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).fill(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Playwright 教程&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 通过角色定位（更语义化）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.get_by_role(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;搜索&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).click()</span></span></code></pre></div><blockquote><p><strong>推荐</strong>：优先使用 <code>get_by_*</code> 系列方法（如 <code>get_by_role</code>, <code>get_by_label</code>, <code>get_by_placeholder</code>），它们更稳定、可读性更强。</p></blockquote><hr><h2 id="_5-交互操作" tabindex="-1">5. 交互操作 <a class="header-anchor" href="#_5-交互操作" aria-label="Permalink to &quot;5. 交互操作&quot;">​</a></h2><h3 id="常用操作" tabindex="-1">常用操作 <a class="header-anchor" href="#常用操作" aria-label="Permalink to &quot;常用操作&quot;">​</a></h3><table tabindex="0"><thead><tr><th>操作</th><th>方法</th></tr></thead><tbody><tr><td>输入文本</td><td><code>fill()</code>（清空后输入）或 <code>type()</code>（逐字输入）</td></tr><tr><td>点击</td><td><code>click()</code></td></tr><tr><td>双击</td><td><code>dblclick()</code></td></tr><tr><td>右键</td><td><code>click(button=&quot;right&quot;)</code></td></tr><tr><td>悬停</td><td><code>hover()</code></td></tr><tr><td>选择下拉框</td><td><code>select_option()</code></td></tr><tr><td>上传文件</td><td><code>set_input_files()</code></td></tr><tr><td>检查复选框</td><td><code>check()</code> / <code>uncheck()</code></td></tr></tbody></table><h3 id="示例-1" tabindex="-1">示例 <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 填写表单</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#username&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).fill(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).fill(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pass456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 点击登录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button[type=&#39;submit&#39;]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).click()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 选择下拉选项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#country&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).select_option(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;China&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 上传文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;input[type=&#39;file&#39;]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).set_input_files(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查复选框</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#agree&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).check()</span></span></code></pre></div><hr><h2 id="_6-等待机制" tabindex="-1">6. 等待机制 <a class="header-anchor" href="#_6-等待机制" aria-label="Permalink to &quot;6. 等待机制&quot;">​</a></h2><p>Playwright <strong>自动等待</strong>元素可操作（可见、可点击等），但有时仍需显式等待。</p><h3 id="自动等待-推荐" tabindex="-1">自动等待（推荐） <a class="header-anchor" href="#自动等待-推荐" aria-label="Permalink to &quot;自动等待（推荐）&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自动等待按钮可点击后才点击</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#submit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).click()</span></span></code></pre></div><h3 id="显式等待" tabindex="-1">显式等待 <a class="header-anchor" href="#显式等待" aria-label="Permalink to &quot;显式等待&quot;">​</a></h3><ul><li><p>等待元素出现：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.wait_for_selector(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#result&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;visible&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p>等待导航完成：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.expect_navigation():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    page.click(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a[href=&#39;/next&#39;]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p>等待特定 URL：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.wait_for_url(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;**/dashboard&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p>等待函数返回真值：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.wait_for_function(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;() =&gt; window.innerWidth &lt; 100&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul><hr><h2 id="_7-截图与录屏" tabindex="-1">7. 截图与录屏 <a class="header-anchor" href="#_7-截图与录屏" aria-label="Permalink to &quot;7. 截图与录屏&quot;">​</a></h2><h3 id="截图" tabindex="-1">截图 <a class="header-anchor" href="#截图" aria-label="Permalink to &quot;截图&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 整页截图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.screenshot(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;full.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">full_page</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 元素截图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.header&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).screenshot(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;header.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="录屏-视频" tabindex="-1">录屏（视频） <a class="header-anchor" href="#录屏-视频" aria-label="Permalink to &quot;录屏（视频）&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">browser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p.chromium.launch()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.new_context(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">record_video_dir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;videos/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context.new_page()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.goto(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ... 操作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context.close()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 视频保存在 videos/ 目录</span></span></code></pre></div><blockquote><p>视频文件名格式：<code>&lt;timestamp&gt;-&lt;random&gt;.webm</code></p></blockquote><hr><h2 id="_8-网络请求拦截与模拟" tabindex="-1">8. 网络请求拦截与模拟 <a class="header-anchor" href="#_8-网络请求拦截与模拟" aria-label="Permalink to &quot;8. 网络请求拦截与模拟&quot;">​</a></h2><h3 id="拦截请求" tabindex="-1">拦截请求 <a class="header-anchor" href="#拦截请求" aria-label="Permalink to &quot;拦截请求&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handle_route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(route):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ads&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> route.request.url:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        route.abort()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 屏蔽广告</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        route.continue_()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.route(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;**/*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, handle_route)</span></span></code></pre></div><h3 id="修改响应" tabindex="-1">修改响应 <a class="header-anchor" href="#修改响应" aria-label="Permalink to &quot;修改响应&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mock_api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(route):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    route.fulfill(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mocked&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.route(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;**/api/data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mock_api)</span></span></code></pre></div><h3 id="监听响应" tabindex="-1">监听响应 <a class="header-anchor" href="#监听响应" aria-label="Permalink to &quot;监听响应&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> log_response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/api/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response.url:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;API Response: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response.url</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response.status</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.on(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;response&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, log_response)</span></span></code></pre></div><hr><h2 id="_9-上下文-context-与多页面" tabindex="-1">9. 上下文（Context）与多页面 <a class="header-anchor" href="#_9-上下文-context-与多页面" aria-label="Permalink to &quot;9. 上下文（Context）与多页面&quot;">​</a></h2><h3 id="上下文-context" tabindex="-1">上下文（Context） <a class="header-anchor" href="#上下文-context" aria-label="Permalink to &quot;上下文（Context）&quot;">​</a></h3><ul><li>一个浏览器可创建多个上下文（类似隐身窗口）</li><li>上下文之间<strong>完全隔离</strong>（Cookie、Storage 等不共享）</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.new_context()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context1.new_page()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.new_context()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context2.new_page()</span></span></code></pre></div><h3 id="多页面操作" tabindex="-1">多页面操作 <a class="header-anchor" href="#多页面操作" aria-label="Permalink to &quot;多页面操作&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context.new_page()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page1.goto(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://a.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context.new_page()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page2.goto(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://b.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换页面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page1.bring_to_front()</span></span></code></pre></div><h3 id="页面事件监听" tabindex="-1">页面事件监听 <a class="header-anchor" href="#页面事件监听" aria-label="Permalink to &quot;页面事件监听&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> on_popup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(popup):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;新弹窗打开:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, popup.url)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.on(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;popup&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, on_popup)</span></span></code></pre></div><hr><h2 id="_10-配置与最佳实践" tabindex="-1">10. 配置与最佳实践 <a class="header-anchor" href="#_10-配置与最佳实践" aria-label="Permalink to &quot;10. 配置与最佳实践&quot;">​</a></h2><h3 id="使用-pytest-playwright-推荐用于测试" tabindex="-1">使用 pytest + Playwright（推荐用于测试） <a class="header-anchor" href="#使用-pytest-playwright-推荐用于测试" aria-label="Permalink to &quot;使用 pytest + Playwright（推荐用于测试）&quot;">​</a></h3><p>安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytest-playwright</span></span></code></pre></div><p>编写测试：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># test_example.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_homepage_has_title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    page.goto(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://example.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.title() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Example Domain&quot;</span></span></code></pre></div><p>运行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pytest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --browser</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chromium</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --headed</span></span></code></pre></div><h3 id="配置文件-playwright-config-py" tabindex="-1">配置文件 <code>playwright.config.py</code> <a class="header-anchor" href="#配置文件-playwright-config-py" aria-label="Permalink to &quot;配置文件 \`playwright.config.py\`&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># playwright.config.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;use&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;headless&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;viewport&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1920</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;height&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;locale&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zh-CN&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;timezone_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Asia/Shanghai&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;projects&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chromium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;use&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;browser_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chromium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;firefox&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;use&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;browser_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;firefox&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><h3 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h3><ul><li>优先使用 <code>get_by_*</code> 定位器</li><li>避免使用 <code>time.sleep()</code>，用 Playwright 内置等待</li><li>使用上下文隔离不同用户会话</li><li>在 CI 中使用无头模式</li><li>敏感操作（如密码）使用环境变量</li></ul><hr><h2 id="_11-常见问题" tabindex="-1">11. 常见问题 <a class="header-anchor" href="#_11-常见问题" aria-label="Permalink to &quot;11. 常见问题&quot;">​</a></h2><h3 id="q1-playwright-和-selenium-有什么区别" tabindex="-1">Q1: Playwright 和 Selenium 有什么区别？ <a class="header-anchor" href="#q1-playwright-和-selenium-有什么区别" aria-label="Permalink to &quot;Q1: Playwright 和 Selenium 有什么区别？&quot;">​</a></h3><ul><li>Playwright 更现代，API 更简洁</li><li>Playwright 自动等待，减少 flaky 测试</li><li>Playwright 支持网络拦截、录屏、移动端模拟等高级功能</li><li>Playwright 启动速度更快，资源占用更低</li></ul><h3 id="q2-如何处理-iframe" tabindex="-1">Q2: 如何处理 iframe？ <a class="header-anchor" href="#q2-如何处理-iframe" aria-label="Permalink to &quot;Q2: 如何处理 iframe？&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">frame </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.frame_locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;iframe[name=&#39;myframe&#39;]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">frame.locator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#inside-input&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).fill(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="q3-如何模拟移动端" tabindex="-1">Q3: 如何模拟移动端？ <a class="header-anchor" href="#q3-如何模拟移动端" aria-label="Permalink to &quot;Q3: 如何模拟移动端？&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">iphone </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p.devices[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;iPhone 13&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.new_context(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">iphone)</span></span></code></pre></div><h3 id="q4-如何保存-加载-cookie" tabindex="-1">Q4: 如何保存/加载 Cookie？ <a class="header-anchor" href="#q4-如何保存-加载-cookie" aria-label="Permalink to &quot;Q4: 如何保存/加载 Cookie？&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 保存</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">storage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context.storage_state(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auth.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 加载</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.new_context(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">storage_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auth.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h2 id="结语" tabindex="-1">结语 <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;结语&quot;">​</a></h2><p>Playwright 是目前最强大的浏览器自动化工具之一，其简洁的 API、强大的功能和良好的文档使其成为 Python 自动化开发的首选。</p><blockquote><p>📚 官方文档：<a href="https://playwright.dev/python/" target="_blank" rel="noreferrer">https://playwright.dev/python/</a></p></blockquote><p>现在，你可以开始构建自己的自动化脚本、爬虫或端到端测试了！</p><hr><p><strong>Happy Coding with Playwright!</strong> 🚀</p>`,103)])])}const g=i(h,[["render",l]]);export{E as __pageData,g as default};
