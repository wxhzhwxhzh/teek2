import{_ as i,c as t,o as s,aM as e}from"./chunks/framework.CWgDeAH8.js";const g=JSON.parse('{"title":"安装指南","description":"","frontmatter":{"id":"install","permalink":"/dp/prepare/install","title":"安装指南"},"headers":[],"relativePath":"dp/1.🌷准备/2.install.md","filePath":"dp/1.🌷准备/2.install.md"}'),l={name:"dp/1.🌷准备/2.install.md"};function n(d,a,o,r,h,p){return s(),t("div",null,[...a[0]||(a[0]=[e('<h1 id="drissionpage-安装指南" tabindex="-1">DrissionPage 安装指南 <a class="header-anchor" href="#drissionpage-安装指南" aria-label="Permalink to &quot;DrissionPage 安装指南&quot;">​</a></h1><p>本文档基于网页 <a href="http://drissionpage.cn/get_start/installation" target="_blank" rel="noreferrer">http://drissionpage.cn/get_start/installation</a> 内容整理，详细介绍 DrissionPage 的运行环境要求、安装步骤及版本升级方法，帮助用户快速完成工具部署。</p><h2 id="一、运行环境要求" tabindex="-1">一、运行环境要求 <a class="header-anchor" href="#一、运行环境要求" aria-label="Permalink to &quot;一、运行环境要求&quot;">​</a></h2><p>在安装 DrissionPage 前，请确保本地环境满足以下条件，避免因环境不兼容导致工具无法正常使用：</p><table tabindex="0"><thead><tr><th>环境类别</th><th>具体要求</th><th>补充说明</th></tr></thead><tbody><tr><td>操作系统</td><td>Windows、Linux、Mac</td><td>支持主流桌面操作系统，无特殊硬件配置要求</td></tr><tr><td>Python 版本</td><td>3.6 及以上</td><td>建议使用 Python 3.8+ 版本，以获得更稳定的兼容性和性能</td></tr><tr><td>浏览器/应用支持</td><td>Chromium 内核浏览器（如 Google Chrome、Microsoft Edge）、electron 应用</td><td>无需额外安装驱动程序，工具会自动适配 Chromium 内核环境</td></tr></tbody></table><h2 id="二、安装步骤" tabindex="-1">二、安装步骤 <a class="header-anchor" href="#二、安装步骤" aria-label="Permalink to &quot;二、安装步骤&quot;">​</a></h2><p>DrissionPage 提供简单的 <code>pip</code> 安装方式，无需复杂配置，仅需执行一条命令即可完成安装：</p><ol><li>打开终端（Windows 系统为命令提示符 <code>cmd</code> 或 PowerShell，Linux/Mac 系统为终端 Terminal）。</li><li>输入以下安装命令，等待依赖包自动下载并完成安装：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DrissionPage</span></span></code></pre></div></li><li>安装完成后，可通过在 Python 环境中执行 <code>import DrissionPage</code> 验证是否安装成功，若未报错则说明安装正常。</li></ol><h2 id="三、版本升级" tabindex="-1">三、版本升级 <a class="header-anchor" href="#三、版本升级" aria-label="Permalink to &quot;三、版本升级&quot;">​</a></h2><p>若需更新 DrissionPage 至最新版本，或回退/指定安装特定版本，可通过以下命令操作：</p><h3 id="_1-升级至最新稳定版" tabindex="-1">1. 升级至最新稳定版 <a class="header-anchor" href="#_1-升级至最新稳定版" aria-label="Permalink to &quot;1. 升级至最新稳定版&quot;">​</a></h3><p>当工具发布新的稳定版本时，可执行以下命令一键升级，获取最新功能和 bug 修复：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DrissionPage</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --upgrade</span></span></code></pre></div><h3 id="_2-指定版本安装-升级" tabindex="-1">2. 指定版本安装/升级 <a class="header-anchor" href="#_2-指定版本安装-升级" aria-label="Permalink to &quot;2. 指定版本安装/升级&quot;">​</a></h3><p>若需安装特定版本（如测试版、历史稳定版），可在命令中指定版本号，格式为 <code>DrissionPage==版本号</code>。示例如下（以 4.0.0b17 版本为例）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DrissionPage==4.0.0b17</span></span></code></pre></div><ul><li>版本号格式说明：<code>4.0.0b17</code> 中，<code>4.0.0</code> 为主版本号，<code>b17</code> 表示第 17 个测试版（<code>b</code> 即 beta）；稳定版通常无后缀（如 <code>4.1.0</code>）。</li><li>适用场景：需兼容旧项目、测试特定版本功能，或最新版本存在兼容性问题时使用。</li></ul>',17)])])}const k=i(l,[["render",n]]);export{g as __pageData,k as default};
